<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="741.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="240"><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.42%)</title><rect x="1.2500%" y="597" width="0.4167%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="1"/><text x="1.5000%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.42%)</title><rect x="1.2500%" y="581" width="0.4167%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="1"/><text x="1.5000%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 1.25%)</title><rect x="0.8333%" y="629" width="1.2500%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="1.0833%" y="639.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.83%)</title><rect x="1.2500%" y="613" width="0.8333%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="1.5000%" y="623.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.42%)</title><rect x="1.6667%" y="597" width="0.4167%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="1.9167%" y="607.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.42%)</title><rect x="1.6667%" y="581" width="0.4167%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="1"/><text x="1.9167%" y="591.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.42%)</title><rect x="1.6667%" y="565" width="0.4167%" height="15" fill="rgb(207,160,47)" fg:x="4" fg:w="1"/><text x="1.9167%" y="575.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.42%)</title><rect x="1.6667%" y="549" width="0.4167%" height="15" fill="rgb(228,23,34)" fg:x="4" fg:w="1"/><text x="1.9167%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.42%)</title><rect x="1.6667%" y="533" width="0.4167%" height="15" fill="rgb(218,30,26)" fg:x="4" fg:w="1"/><text x="1.9167%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.42%)</title><rect x="1.6667%" y="517" width="0.4167%" height="15" fill="rgb(220,122,19)" fg:x="4" fg:w="1"/><text x="1.9167%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (4 samples, 1.67%)</title><rect x="0.8333%" y="645" width="1.6667%" height="15" fill="rgb(250,228,42)" fg:x="2" fg:w="4"/><text x="1.0833%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="2.0833%" y="629" width="0.4167%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="1"/><text x="2.3333%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="2.0833%" y="613" width="0.4167%" height="15" fill="rgb(216,20,37)" fg:x="5" fg:w="1"/><text x="2.3333%" y="623.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 3.75%)</title><rect x="0.0000%" y="661" width="3.7500%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="9"/><text x="0.2500%" y="671.50">[ld-..</text></g><g><title>[unknown] (3 samples, 1.25%)</title><rect x="2.5000%" y="645" width="1.2500%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="3"/><text x="2.7500%" y="655.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 4.17%)</title><rect x="0.0000%" y="677" width="4.1667%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="10"/><text x="0.2500%" y="687.50">[ld-l..</text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="3.7500%" y="661" width="0.4167%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="4.0000%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="5.4167%" y="661" width="0.4167%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="1"/><text x="5.6667%" y="671.50"></text></g><g><title>std::rt::lang_start (1 samples, 0.42%)</title><rect x="5.4167%" y="645" width="0.4167%" height="15" fill="rgb(221,200,47)" fg:x="13" fg:w="1"/><text x="5.6667%" y="655.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.42%)</title><rect x="5.4167%" y="629" width="0.4167%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="5.6667%" y="639.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.42%)</title><rect x="5.4167%" y="613" width="0.4167%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="1"/><text x="5.6667%" y="623.50"></text></g><g><title>std::panicking::try (1 samples, 0.42%)</title><rect x="5.4167%" y="597" width="0.4167%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="1"/><text x="5.6667%" y="607.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.42%)</title><rect x="5.4167%" y="581" width="0.4167%" height="15" fill="rgb(221,5,38)" fg:x="13" fg:w="1"/><text x="5.6667%" y="591.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (1 samples, 0.42%)</title><rect x="5.4167%" y="565" width="0.4167%" height="15" fill="rgb(247,18,42)" fg:x="13" fg:w="1"/><text x="5.6667%" y="575.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.42%)</title><rect x="5.4167%" y="549" width="0.4167%" height="15" fill="rgb(241,131,45)" fg:x="13" fg:w="1"/><text x="5.6667%" y="559.50"></text></g><g><title>std::panicking::try (1 samples, 0.42%)</title><rect x="5.4167%" y="533" width="0.4167%" height="15" fill="rgb(249,31,29)" fg:x="13" fg:w="1"/><text x="5.6667%" y="543.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.42%)</title><rect x="5.4167%" y="517" width="0.4167%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="1"/><text x="5.6667%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.42%)</title><rect x="5.4167%" y="501" width="0.4167%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="1"/><text x="5.6667%" y="511.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.42%)</title><rect x="5.4167%" y="485" width="0.4167%" height="15" fill="rgb(214,148,48)" fg:x="13" fg:w="1"/><text x="5.6667%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.42%)</title><rect x="5.4167%" y="469" width="0.4167%" height="15" fill="rgb(232,36,49)" fg:x="13" fg:w="1"/><text x="5.6667%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.42%)</title><rect x="5.4167%" y="453" width="0.4167%" height="15" fill="rgb(209,103,24)" fg:x="13" fg:w="1"/><text x="5.6667%" y="463.50"></text></g><g><title>logger::main (1 samples, 0.42%)</title><rect x="5.4167%" y="437" width="0.4167%" height="15" fill="rgb(229,88,8)" fg:x="13" fg:w="1"/><text x="5.6667%" y="447.50"></text></g><g><title>input::context::Libinput::udev_assign_seat (1 samples, 0.42%)</title><rect x="5.4167%" y="421" width="0.4167%" height="15" fill="rgb(213,181,19)" fg:x="13" fg:w="1"/><text x="5.6667%" y="431.50"></text></g><g><title>libinput_udev_assign_seat (1 samples, 0.42%)</title><rect x="5.4167%" y="405" width="0.4167%" height="15" fill="rgb(254,191,54)" fg:x="13" fg:w="1"/><text x="5.6667%" y="415.50"></text></g><g><title>[libinput.so.10.13.0] (1 samples, 0.42%)</title><rect x="5.4167%" y="389" width="0.4167%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="1"/><text x="5.6667%" y="399.50"></text></g><g><title>[libinput.so.10.13.0] (1 samples, 0.42%)</title><rect x="5.4167%" y="373" width="0.4167%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="1"/><text x="5.6667%" y="383.50"></text></g><g><title>[libinput.so.10.13.0] (1 samples, 0.42%)</title><rect x="5.4167%" y="357" width="0.4167%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="1"/><text x="5.6667%" y="367.50"></text></g><g><title>[libinput.so.10.13.0] (1 samples, 0.42%)</title><rect x="5.4167%" y="341" width="0.4167%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="1"/><text x="5.6667%" y="351.50"></text></g><g><title>libwacom_database_new (1 samples, 0.42%)</title><rect x="5.4167%" y="325" width="0.4167%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="1"/><text x="5.6667%" y="335.50"></text></g><g><title>[libwacom.so.9.0.0] (1 samples, 0.42%)</title><rect x="5.4167%" y="309" width="0.4167%" height="15" fill="rgb(232,182,51)" fg:x="13" fg:w="1"/><text x="5.6667%" y="319.50"></text></g><g><title>g_key_file_load_from_file (1 samples, 0.42%)</title><rect x="5.4167%" y="293" width="0.4167%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="1"/><text x="5.6667%" y="303.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="5.4167%" y="277" width="0.4167%" height="15" fill="rgb(208,69,12)" fg:x="13" fg:w="1"/><text x="5.6667%" y="287.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="5.4167%" y="261" width="0.4167%" height="15" fill="rgb(235,93,37)" fg:x="13" fg:w="1"/><text x="5.6667%" y="271.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="5.4167%" y="245" width="0.4167%" height="15" fill="rgb(213,116,39)" fg:x="13" fg:w="1"/><text x="5.6667%" y="255.50"></text></g><g><title>g_utf8_strchr (1 samples, 0.42%)</title><rect x="5.4167%" y="229" width="0.4167%" height="15" fill="rgb(222,207,29)" fg:x="13" fg:w="1"/><text x="5.6667%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="5.4167%" y="213" width="0.4167%" height="15" fill="rgb(206,96,30)" fg:x="13" fg:w="1"/><text x="5.6667%" y="223.50"></text></g><g><title>strchr@plt (1 samples, 0.42%)</title><rect x="5.4167%" y="197" width="0.4167%" height="15" fill="rgb(218,138,4)" fg:x="13" fg:w="1"/><text x="5.6667%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="5.8333%" y="357" width="0.4167%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="1"/><text x="6.0833%" y="367.50"></text></g><g><title>[unknown] (6 samples, 2.50%)</title><rect x="4.1667%" y="677" width="2.5000%" height="15" fill="rgb(239,60,40)" fg:x="10" fg:w="6"/><text x="4.4167%" y="687.50">[u..</text></g><g><title>std::rt::lang_start_internal (2 samples, 0.83%)</title><rect x="5.8333%" y="661" width="0.8333%" height="15" fill="rgb(206,27,48)" fg:x="14" fg:w="2"/><text x="6.0833%" y="671.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.83%)</title><rect x="5.8333%" y="645" width="0.8333%" height="15" fill="rgb(225,35,8)" fg:x="14" fg:w="2"/><text x="6.0833%" y="655.50"></text></g><g><title>std::panicking::try (2 samples, 0.83%)</title><rect x="5.8333%" y="629" width="0.8333%" height="15" fill="rgb(250,213,24)" fg:x="14" fg:w="2"/><text x="6.0833%" y="639.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.83%)</title><rect x="5.8333%" y="613" width="0.8333%" height="15" fill="rgb(247,123,22)" fg:x="14" fg:w="2"/><text x="6.0833%" y="623.50"></text></g><g><title>std::rt::lang_start_internal::_{{closure}} (2 samples, 0.83%)</title><rect x="5.8333%" y="597" width="0.8333%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="2"/><text x="6.0833%" y="607.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.83%)</title><rect x="5.8333%" y="581" width="0.8333%" height="15" fill="rgb(231,145,46)" fg:x="14" fg:w="2"/><text x="6.0833%" y="591.50"></text></g><g><title>std::panicking::try (2 samples, 0.83%)</title><rect x="5.8333%" y="565" width="0.8333%" height="15" fill="rgb(251,118,11)" fg:x="14" fg:w="2"/><text x="6.0833%" y="575.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.83%)</title><rect x="5.8333%" y="549" width="0.8333%" height="15" fill="rgb(217,147,25)" fg:x="14" fg:w="2"/><text x="6.0833%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.83%)</title><rect x="5.8333%" y="533" width="0.8333%" height="15" fill="rgb(247,81,37)" fg:x="14" fg:w="2"/><text x="6.0833%" y="543.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (2 samples, 0.83%)</title><rect x="5.8333%" y="517" width="0.8333%" height="15" fill="rgb(209,12,38)" fg:x="14" fg:w="2"/><text x="6.0833%" y="527.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.83%)</title><rect x="5.8333%" y="501" width="0.8333%" height="15" fill="rgb(227,1,9)" fg:x="14" fg:w="2"/><text x="6.0833%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.83%)</title><rect x="5.8333%" y="485" width="0.8333%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="2"/><text x="6.0833%" y="495.50"></text></g><g><title>logger::main (2 samples, 0.83%)</title><rect x="5.8333%" y="469" width="0.8333%" height="15" fill="rgb(221,10,30)" fg:x="14" fg:w="2"/><text x="6.0833%" y="479.50"></text></g><g><title>input::context::Libinput::udev_assign_seat (2 samples, 0.83%)</title><rect x="5.8333%" y="453" width="0.8333%" height="15" fill="rgb(210,229,1)" fg:x="14" fg:w="2"/><text x="6.0833%" y="463.50"></text></g><g><title>libinput_udev_assign_seat (2 samples, 0.83%)</title><rect x="5.8333%" y="437" width="0.8333%" height="15" fill="rgb(222,148,37)" fg:x="14" fg:w="2"/><text x="6.0833%" y="447.50"></text></g><g><title>[libinput.so.10.13.0] (2 samples, 0.83%)</title><rect x="5.8333%" y="421" width="0.8333%" height="15" fill="rgb(234,67,33)" fg:x="14" fg:w="2"/><text x="6.0833%" y="431.50"></text></g><g><title>[libinput.so.10.13.0] (2 samples, 0.83%)</title><rect x="5.8333%" y="405" width="0.8333%" height="15" fill="rgb(247,98,35)" fg:x="14" fg:w="2"/><text x="6.0833%" y="415.50"></text></g><g><title>[libinput.so.10.13.0] (2 samples, 0.83%)</title><rect x="5.8333%" y="389" width="0.8333%" height="15" fill="rgb(247,138,52)" fg:x="14" fg:w="2"/><text x="6.0833%" y="399.50"></text></g><g><title>[libinput.so.10.13.0] (2 samples, 0.83%)</title><rect x="5.8333%" y="373" width="0.8333%" height="15" fill="rgb(213,79,30)" fg:x="14" fg:w="2"/><text x="6.0833%" y="383.50"></text></g><g><title>__strndup (1 samples, 0.42%)</title><rect x="6.2500%" y="357" width="0.4167%" height="15" fill="rgb(246,177,23)" fg:x="15" fg:w="1"/><text x="6.5000%" y="367.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="6.2500%" y="341" width="0.4167%" height="15" fill="rgb(230,62,27)" fg:x="15" fg:w="1"/><text x="6.5000%" y="351.50"></text></g><g><title>&lt;input::event::keyboard::KeyboardKeyEvent as input::FromRaw&lt;input_sys::libinput_event_keyboard&gt;&gt;::try_from_raw (1 samples, 0.42%)</title><rect x="8.7500%" y="341" width="0.4167%" height="15" fill="rgb(216,154,8)" fg:x="21" fg:w="1"/><text x="9.0000%" y="351.50"></text></g><g><title>&lt;input::event::keyboard::KeyboardKeyEvent as input::FromRaw&lt;input_sys::libinput_event_keyboard&gt;&gt;::from_raw (1 samples, 0.42%)</title><rect x="8.7500%" y="325" width="0.4167%" height="15" fill="rgb(244,35,45)" fg:x="21" fg:w="1"/><text x="9.0000%" y="335.50"></text></g><g><title>&lt;input::context::Libinput as core::clone::Clone&gt;::clone (1 samples, 0.42%)</title><rect x="8.7500%" y="309" width="0.4167%" height="15" fill="rgb(251,115,12)" fg:x="21" fg:w="1"/><text x="9.0000%" y="319.50"></text></g><g><title>&lt;input::event::keyboard::KeyboardEvent as input::FromRaw&lt;input_sys::libinput_event_keyboard&gt;&gt;::try_from_raw (3 samples, 1.25%)</title><rect x="8.3333%" y="357" width="1.2500%" height="15" fill="rgb(240,54,50)" fg:x="20" fg:w="3"/><text x="8.5833%" y="367.50"></text></g><g><title>libinput_event_keyboard_get_base_event (1 samples, 0.42%)</title><rect x="9.1667%" y="341" width="0.4167%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="9.4167%" y="351.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 2.50%)</title><rect x="7.5000%" y="405" width="2.5000%" height="15" fill="rgb(207,117,47)" fg:x="18" fg:w="6"/><text x="7.7500%" y="415.50">&lt;&amp;..</text></g><g><title>&lt;input::context::Libinput as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 2.50%)</title><rect x="7.5000%" y="389" width="2.5000%" height="15" fill="rgb(249,43,39)" fg:x="18" fg:w="6"/><text x="7.7500%" y="399.50">&lt;i..</text></g><g><title>&lt;input::event::Event as input::FromRaw&lt;input_sys::libinput_event&gt;&gt;::try_from_raw (4 samples, 1.67%)</title><rect x="8.3333%" y="373" width="1.6667%" height="15" fill="rgb(209,38,44)" fg:x="20" fg:w="4"/><text x="8.5833%" y="383.50"></text></g><g><title>libinput_event_get_device_notify_event (1 samples, 0.42%)</title><rect x="9.5833%" y="357" width="0.4167%" height="15" fill="rgb(236,212,23)" fg:x="23" fg:w="1"/><text x="9.8333%" y="367.50"></text></g><g><title>libinput_event_get_context (1 samples, 0.42%)</title><rect x="9.5833%" y="341" width="0.4167%" height="15" fill="rgb(242,79,21)" fg:x="23" fg:w="1"/><text x="9.8333%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;input::event::keyboard::KeyboardEvent&gt; (2 samples, 0.83%)</title><rect x="10.0000%" y="405" width="0.8333%" height="15" fill="rgb(211,96,35)" fg:x="24" fg:w="2"/><text x="10.2500%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;input::event::keyboard::KeyboardKeyEvent&gt; (2 samples, 0.83%)</title><rect x="10.0000%" y="389" width="0.8333%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="2"/><text x="10.2500%" y="399.50"></text></g><g><title>&lt;input::event::keyboard::KeyboardKeyEvent as core::ops::drop::Drop&gt;::drop (1 samples, 0.42%)</title><rect x="10.4167%" y="373" width="0.4167%" height="15" fill="rgb(211,81,21)" fg:x="25" fg:w="1"/><text x="10.6667%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.83%)</title><rect x="10.8333%" y="405" width="0.8333%" height="15" fill="rgb(208,190,38)" fg:x="26" fg:w="2"/><text x="11.0833%" y="415.50"></text></g><g><title>input::AsRaw::as_raw_mut (1 samples, 0.42%)</title><rect x="12.5000%" y="389" width="0.4167%" height="15" fill="rgb(235,213,38)" fg:x="30" fg:w="1"/><text x="12.7500%" y="399.50"></text></g><g><title>&lt;input::context::Libinput as input::AsRaw&lt;input_sys::libinput&gt;&gt;::as_raw (1 samples, 0.42%)</title><rect x="12.5000%" y="373" width="0.4167%" height="15" fill="rgb(237,122,38)" fg:x="30" fg:w="1"/><text x="12.7500%" y="383.50"></text></g><g><title>[libinput.so.10.13.0] (13 samples, 5.42%)</title><rect x="17.5000%" y="357" width="5.4167%" height="15" fill="rgb(244,218,35)" fg:x="42" fg:w="13"/><text x="17.7500%" y="367.50">[libinp..</text></g><g><title>__libc_calloc (1 samples, 0.42%)</title><rect x="22.5000%" y="341" width="0.4167%" height="15" fill="rgb(240,68,47)" fg:x="54" fg:w="1"/><text x="22.7500%" y="351.50"></text></g><g><title>libevdev_has_event_code (3 samples, 1.25%)</title><rect x="25.0000%" y="325" width="1.2500%" height="15" fill="rgb(210,16,53)" fg:x="60" fg:w="3"/><text x="25.2500%" y="335.50"></text></g><g><title>[libevdev.so.2.3.0] (11 samples, 4.58%)</title><rect x="24.5833%" y="341" width="4.5833%" height="15" fill="rgb(235,124,12)" fg:x="59" fg:w="11"/><text x="24.8333%" y="351.50">[libe..</text></g><g><title>read (7 samples, 2.92%)</title><rect x="26.2500%" y="325" width="2.9167%" height="15" fill="rgb(224,169,11)" fg:x="63" fg:w="7"/><text x="26.5000%" y="335.50">re..</text></g><g><title>[unknown] (6 samples, 2.50%)</title><rect x="26.6667%" y="309" width="2.5000%" height="15" fill="rgb(250,166,2)" fg:x="64" fg:w="6"/><text x="26.9167%" y="319.50">[u..</text></g><g><title>[unknown] (6 samples, 2.50%)</title><rect x="26.6667%" y="293" width="2.5000%" height="15" fill="rgb(242,216,29)" fg:x="64" fg:w="6"/><text x="26.9167%" y="303.50">[u..</text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="28.3333%" y="277" width="0.8333%" height="15" fill="rgb(230,116,27)" fg:x="68" fg:w="2"/><text x="28.5833%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="28.3333%" y="261" width="0.8333%" height="15" fill="rgb(228,99,48)" fg:x="68" fg:w="2"/><text x="28.5833%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="28.7500%" y="245" width="0.4167%" height="15" fill="rgb(253,11,6)" fg:x="69" fg:w="1"/><text x="29.0000%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="28.7500%" y="229" width="0.4167%" height="15" fill="rgb(247,143,39)" fg:x="69" fg:w="1"/><text x="29.0000%" y="239.50"></text></g><g><title>[libinput.so.10.13.0] (33 samples, 13.75%)</title><rect x="16.2500%" y="373" width="13.7500%" height="15" fill="rgb(236,97,10)" fg:x="39" fg:w="33"/><text x="16.5000%" y="383.50">[libinput.so.10.13.0]</text></g><g><title>libevdev_next_event (17 samples, 7.08%)</title><rect x="22.9167%" y="357" width="7.0833%" height="15" fill="rgb(233,208,19)" fg:x="55" fg:w="17"/><text x="23.1667%" y="367.50">libevdev_n..</text></g><g><title>libevdev_has_event_code (2 samples, 0.83%)</title><rect x="29.1667%" y="341" width="0.8333%" height="15" fill="rgb(216,164,2)" fg:x="70" fg:w="2"/><text x="29.4167%" y="351.50"></text></g><g><title>libevdev_has_event_type (1 samples, 0.42%)</title><rect x="29.5833%" y="325" width="0.4167%" height="15" fill="rgb(220,129,5)" fg:x="71" fg:w="1"/><text x="29.8333%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="30.0000%" y="373" width="0.4167%" height="15" fill="rgb(242,17,10)" fg:x="72" fg:w="1"/><text x="30.2500%" y="383.50"></text></g><g><title>clock_gettime (3 samples, 1.25%)</title><rect x="30.4167%" y="373" width="1.2500%" height="15" fill="rgb(242,107,0)" fg:x="73" fg:w="3"/><text x="30.6667%" y="383.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.42%)</title><rect x="31.2500%" y="357" width="0.4167%" height="15" fill="rgb(251,28,31)" fg:x="75" fg:w="1"/><text x="31.5000%" y="367.50"></text></g><g><title>input::context::Libinput::dispatch (56 samples, 23.33%)</title><rect x="11.6667%" y="405" width="23.3333%" height="15" fill="rgb(233,223,10)" fg:x="28" fg:w="56"/><text x="11.9167%" y="415.50">input::context::Libinput::dispatch</text></g><g><title>libinput_dispatch (53 samples, 22.08%)</title><rect x="12.9167%" y="389" width="22.0833%" height="15" fill="rgb(215,21,27)" fg:x="31" fg:w="53"/><text x="13.1667%" y="399.50">libinput_dispatch</text></g><g><title>epoll_wait (8 samples, 3.33%)</title><rect x="31.6667%" y="373" width="3.3333%" height="15" fill="rgb(232,23,21)" fg:x="76" fg:w="8"/><text x="31.9167%" y="383.50">epo..</text></g><g><title>[unknown] (5 samples, 2.08%)</title><rect x="32.9167%" y="357" width="2.0833%" height="15" fill="rgb(244,5,23)" fg:x="79" fg:w="5"/><text x="33.1667%" y="367.50">[..</text></g><g><title>[unknown] (4 samples, 1.67%)</title><rect x="33.3333%" y="341" width="1.6667%" height="15" fill="rgb(226,81,46)" fg:x="80" fg:w="4"/><text x="33.5833%" y="351.50"></text></g><g><title>[libc.so.6] (8 samples, 3.33%)</title><rect x="36.2500%" y="309" width="3.3333%" height="15" fill="rgb(247,70,30)" fg:x="87" fg:w="8"/><text x="36.5000%" y="319.50">[li..</text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="39.1667%" y="293" width="0.4167%" height="15" fill="rgb(212,68,19)" fg:x="94" fg:w="1"/><text x="39.4167%" y="303.50"></text></g><g><title>[libc.so.6] (12 samples, 5.00%)</title><rect x="40.4167%" y="293" width="5.0000%" height="15" fill="rgb(240,187,13)" fg:x="97" fg:w="12"/><text x="40.6667%" y="303.50">[libc...</text></g><g><title>[libc.so.6] (2 samples, 0.83%)</title><rect x="44.5833%" y="277" width="0.8333%" height="15" fill="rgb(223,113,26)" fg:x="107" fg:w="2"/><text x="44.8333%" y="287.50"></text></g><g><title>[libinput.so.10.13.0] (2 samples, 0.83%)</title><rect x="45.4167%" y="293" width="0.8333%" height="15" fill="rgb(206,192,2)" fg:x="109" fg:w="2"/><text x="45.6667%" y="303.50"></text></g><g><title>udev_device_get_property_value (1 samples, 0.42%)</title><rect x="45.8333%" y="277" width="0.4167%" height="15" fill="rgb(241,108,4)" fg:x="110" fg:w="1"/><text x="46.0833%" y="287.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="45.8333%" y="261" width="0.4167%" height="15" fill="rgb(247,173,49)" fg:x="110" fg:w="1"/><text x="46.0833%" y="271.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="45.8333%" y="245" width="0.4167%" height="15" fill="rgb(224,114,35)" fg:x="110" fg:w="1"/><text x="46.0833%" y="255.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="45.8333%" y="229" width="0.4167%" height="15" fill="rgb(245,159,27)" fg:x="110" fg:w="1"/><text x="46.0833%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="45.8333%" y="213" width="0.4167%" height="15" fill="rgb(245,172,44)" fg:x="110" fg:w="1"/><text x="46.0833%" y="223.50"></text></g><g><title>_IO_file_fopen (1 samples, 0.42%)</title><rect x="45.8333%" y="197" width="0.4167%" height="15" fill="rgb(236,23,11)" fg:x="110" fg:w="1"/><text x="46.0833%" y="207.50"></text></g><g><title>_IO_file_open (1 samples, 0.42%)</title><rect x="45.8333%" y="181" width="0.4167%" height="15" fill="rgb(205,117,38)" fg:x="110" fg:w="1"/><text x="46.0833%" y="191.50"></text></g><g><title>open64 (1 samples, 0.42%)</title><rect x="45.8333%" y="165" width="0.4167%" height="15" fill="rgb(237,72,25)" fg:x="110" fg:w="1"/><text x="46.0833%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="45.8333%" y="149" width="0.4167%" height="15" fill="rgb(244,70,9)" fg:x="110" fg:w="1"/><text x="46.0833%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="45.8333%" y="133" width="0.4167%" height="15" fill="rgb(217,125,39)" fg:x="110" fg:w="1"/><text x="46.0833%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="45.8333%" y="117" width="0.4167%" height="15" fill="rgb(235,36,10)" fg:x="110" fg:w="1"/><text x="46.0833%" y="127.50"></text></g><g><title>g_file_get_contents (1 samples, 0.42%)</title><rect x="46.2500%" y="277" width="0.4167%" height="15" fill="rgb(251,123,47)" fg:x="111" fg:w="1"/><text x="46.5000%" y="287.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="46.2500%" y="261" width="0.4167%" height="15" fill="rgb(221,13,13)" fg:x="111" fg:w="1"/><text x="46.5000%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="46.2500%" y="245" width="0.4167%" height="15" fill="rgb(238,131,9)" fg:x="111" fg:w="1"/><text x="46.5000%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="46.2500%" y="229" width="0.4167%" height="15" fill="rgb(211,50,8)" fg:x="111" fg:w="1"/><text x="46.5000%" y="239.50"></text></g><g><title>g_object_unref (1 samples, 0.42%)</title><rect x="46.6667%" y="277" width="0.4167%" height="15" fill="rgb(245,182,24)" fg:x="112" fg:w="1"/><text x="46.9167%" y="287.50"></text></g><g><title>[libgudev-1.0.so.0.3.0] (1 samples, 0.42%)</title><rect x="46.6667%" y="261" width="0.4167%" height="15" fill="rgb(242,14,37)" fg:x="112" fg:w="1"/><text x="46.9167%" y="271.50"></text></g><g><title>udev_device_unref (1 samples, 0.42%)</title><rect x="46.6667%" y="245" width="0.4167%" height="15" fill="rgb(246,228,12)" fg:x="112" fg:w="1"/><text x="46.9167%" y="255.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="46.6667%" y="229" width="0.4167%" height="15" fill="rgb(213,55,15)" fg:x="112" fg:w="1"/><text x="46.9167%" y="239.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="46.6667%" y="213" width="0.4167%" height="15" fill="rgb(209,9,3)" fg:x="112" fg:w="1"/><text x="46.9167%" y="223.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="46.6667%" y="197" width="0.4167%" height="15" fill="rgb(230,59,30)" fg:x="112" fg:w="1"/><text x="46.9167%" y="207.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="46.6667%" y="181" width="0.4167%" height="15" fill="rgb(209,121,21)" fg:x="112" fg:w="1"/><text x="46.9167%" y="191.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="46.6667%" y="165" width="0.4167%" height="15" fill="rgb(220,109,13)" fg:x="112" fg:w="1"/><text x="46.9167%" y="175.50"></text></g><g><title>g_ptr_array_add (1 samples, 0.42%)</title><rect x="47.0833%" y="245" width="0.4167%" height="15" fill="rgb(232,18,1)" fg:x="113" fg:w="1"/><text x="47.3333%" y="255.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="47.0833%" y="229" width="0.4167%" height="15" fill="rgb(215,41,42)" fg:x="113" fg:w="1"/><text x="47.3333%" y="239.50"></text></g><g><title>g_realloc (1 samples, 0.42%)</title><rect x="47.0833%" y="213" width="0.4167%" height="15" fill="rgb(224,123,36)" fg:x="113" fg:w="1"/><text x="47.3333%" y="223.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="47.0833%" y="197" width="0.4167%" height="15" fill="rgb(240,125,3)" fg:x="113" fg:w="1"/><text x="47.3333%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="47.0833%" y="181" width="0.4167%" height="15" fill="rgb(205,98,50)" fg:x="113" fg:w="1"/><text x="47.3333%" y="191.50"></text></g><g><title>g_ptr_array_new (1 samples, 0.42%)</title><rect x="47.5000%" y="245" width="0.4167%" height="15" fill="rgb(205,185,37)" fg:x="114" fg:w="1"/><text x="47.7500%" y="255.50"></text></g><g><title>g_slice_alloc (1 samples, 0.42%)</title><rect x="47.5000%" y="229" width="0.4167%" height="15" fill="rgb(238,207,15)" fg:x="114" fg:w="1"/><text x="47.7500%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="48.3333%" y="197" width="0.4167%" height="15" fill="rgb(213,199,42)" fg:x="116" fg:w="1"/><text x="48.5833%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.83%)</title><rect x="48.7500%" y="165" width="0.8333%" height="15" fill="rgb(235,201,11)" fg:x="117" fg:w="2"/><text x="49.0000%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="50.8333%" y="117" width="0.4167%" height="15" fill="rgb(207,46,11)" fg:x="122" fg:w="1"/><text x="51.0833%" y="127.50"></text></g><g><title>[libgudev-1.0.so.0.3.0] (11 samples, 4.58%)</title><rect x="47.0833%" y="261" width="4.5833%" height="15" fill="rgb(241,35,35)" fg:x="113" fg:w="11"/><text x="47.3333%" y="271.50">[libg..</text></g><g><title>udev_device_get_tags_list_entry (9 samples, 3.75%)</title><rect x="47.9167%" y="245" width="3.7500%" height="15" fill="rgb(243,32,47)" fg:x="115" fg:w="9"/><text x="48.1667%" y="255.50">udev..</text></g><g><title>[libudev.so.1.7.8] (9 samples, 3.75%)</title><rect x="47.9167%" y="229" width="3.7500%" height="15" fill="rgb(247,202,23)" fg:x="115" fg:w="9"/><text x="48.1667%" y="239.50">[lib..</text></g><g><title>[libudev.so.1.7.8] (9 samples, 3.75%)</title><rect x="47.9167%" y="213" width="3.7500%" height="15" fill="rgb(219,102,11)" fg:x="115" fg:w="9"/><text x="48.1667%" y="223.50">[lib..</text></g><g><title>[libudev.so.1.7.8] (7 samples, 2.92%)</title><rect x="48.7500%" y="197" width="2.9167%" height="15" fill="rgb(243,110,44)" fg:x="117" fg:w="7"/><text x="49.0000%" y="207.50">[l..</text></g><g><title>[libudev.so.1.7.8] (7 samples, 2.92%)</title><rect x="48.7500%" y="181" width="2.9167%" height="15" fill="rgb(222,74,54)" fg:x="117" fg:w="7"/><text x="49.0000%" y="191.50">[l..</text></g><g><title>[libudev.so.1.7.8] (5 samples, 2.08%)</title><rect x="49.5833%" y="165" width="2.0833%" height="15" fill="rgb(216,99,12)" fg:x="119" fg:w="5"/><text x="49.8333%" y="175.50">[..</text></g><g><title>[libudev.so.1.7.8] (5 samples, 2.08%)</title><rect x="49.5833%" y="149" width="2.0833%" height="15" fill="rgb(226,22,26)" fg:x="119" fg:w="5"/><text x="49.8333%" y="159.50">[..</text></g><g><title>[libudev.so.1.7.8] (5 samples, 2.08%)</title><rect x="49.5833%" y="133" width="2.0833%" height="15" fill="rgb(217,163,10)" fg:x="119" fg:w="5"/><text x="49.8333%" y="143.50">[..</text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="51.2500%" y="117" width="0.4167%" height="15" fill="rgb(213,25,53)" fg:x="123" fg:w="1"/><text x="51.5000%" y="127.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="51.6667%" y="181" width="0.4167%" height="15" fill="rgb(252,105,26)" fg:x="124" fg:w="1"/><text x="51.9167%" y="191.50"></text></g><g><title>__close (1 samples, 0.42%)</title><rect x="51.6667%" y="165" width="0.4167%" height="15" fill="rgb(220,39,43)" fg:x="124" fg:w="1"/><text x="51.9167%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="51.6667%" y="149" width="0.4167%" height="15" fill="rgb(229,68,48)" fg:x="124" fg:w="1"/><text x="51.9167%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="51.6667%" y="133" width="0.4167%" height="15" fill="rgb(252,8,32)" fg:x="124" fg:w="1"/><text x="51.9167%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="51.6667%" y="117" width="0.4167%" height="15" fill="rgb(223,20,43)" fg:x="124" fg:w="1"/><text x="51.9167%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="51.6667%" y="101" width="0.4167%" height="15" fill="rgb(229,81,49)" fg:x="124" fg:w="1"/><text x="51.9167%" y="111.50"></text></g><g><title>udev_device_new_from_syspath (2 samples, 0.83%)</title><rect x="51.6667%" y="261" width="0.8333%" height="15" fill="rgb(236,28,36)" fg:x="124" fg:w="2"/><text x="51.9167%" y="271.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="51.6667%" y="245" width="0.8333%" height="15" fill="rgb(249,185,26)" fg:x="124" fg:w="2"/><text x="51.9167%" y="255.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="51.6667%" y="229" width="0.8333%" height="15" fill="rgb(249,174,33)" fg:x="124" fg:w="2"/><text x="51.9167%" y="239.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="51.6667%" y="213" width="0.8333%" height="15" fill="rgb(233,201,37)" fg:x="124" fg:w="2"/><text x="51.9167%" y="223.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="51.6667%" y="197" width="0.8333%" height="15" fill="rgb(221,78,26)" fg:x="124" fg:w="2"/><text x="51.9167%" y="207.50"></text></g><g><title>openat64 (1 samples, 0.42%)</title><rect x="52.0833%" y="181" width="0.4167%" height="15" fill="rgb(250,127,30)" fg:x="125" fg:w="1"/><text x="52.3333%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="52.0833%" y="165" width="0.4167%" height="15" fill="rgb(230,49,44)" fg:x="125" fg:w="1"/><text x="52.3333%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="52.0833%" y="149" width="0.4167%" height="15" fill="rgb(229,67,23)" fg:x="125" fg:w="1"/><text x="52.3333%" y="159.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="52.5000%" y="245" width="0.4167%" height="15" fill="rgb(249,83,47)" fg:x="126" fg:w="1"/><text x="52.7500%" y="255.50"></text></g><g><title>__strdup (1 samples, 0.42%)</title><rect x="52.5000%" y="229" width="0.4167%" height="15" fill="rgb(215,43,3)" fg:x="126" fg:w="1"/><text x="52.7500%" y="239.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="52.5000%" y="213" width="0.4167%" height="15" fill="rgb(238,154,13)" fg:x="126" fg:w="1"/><text x="52.7500%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.5000%" y="197" width="0.4167%" height="15" fill="rgb(219,56,2)" fg:x="126" fg:w="1"/><text x="52.7500%" y="207.50"></text></g><g><title>udev_enumerate_get_list_entry (2 samples, 0.83%)</title><rect x="52.5000%" y="261" width="0.8333%" height="15" fill="rgb(233,0,4)" fg:x="126" fg:w="2"/><text x="52.7500%" y="271.50"></text></g><g><title>qsort_r (1 samples, 0.42%)</title><rect x="52.9167%" y="245" width="0.4167%" height="15" fill="rgb(235,30,7)" fg:x="127" fg:w="1"/><text x="53.1667%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.9167%" y="229" width="0.4167%" height="15" fill="rgb(250,79,13)" fg:x="127" fg:w="1"/><text x="53.1667%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.9167%" y="213" width="0.4167%" height="15" fill="rgb(211,146,34)" fg:x="127" fg:w="1"/><text x="53.1667%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.9167%" y="197" width="0.4167%" height="15" fill="rgb(228,22,38)" fg:x="127" fg:w="1"/><text x="53.1667%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.9167%" y="181" width="0.4167%" height="15" fill="rgb(235,168,5)" fg:x="127" fg:w="1"/><text x="53.1667%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.9167%" y="165" width="0.4167%" height="15" fill="rgb(221,155,16)" fg:x="127" fg:w="1"/><text x="53.1667%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.9167%" y="149" width="0.4167%" height="15" fill="rgb(215,215,53)" fg:x="127" fg:w="1"/><text x="53.1667%" y="159.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="52.9167%" y="133" width="0.4167%" height="15" fill="rgb(223,4,10)" fg:x="127" fg:w="1"/><text x="53.1667%" y="143.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="52.9167%" y="117" width="0.4167%" height="15" fill="rgb(234,103,6)" fg:x="127" fg:w="1"/><text x="53.1667%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="54.1667%" y="149" width="0.4167%" height="15" fill="rgb(227,97,0)" fg:x="130" fg:w="1"/><text x="54.4167%" y="159.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="55.4167%" y="117" width="0.4167%" height="15" fill="rgb(234,150,53)" fg:x="133" fg:w="1"/><text x="55.6667%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="55.4167%" y="101" width="0.4167%" height="15" fill="rgb(228,201,54)" fg:x="133" fg:w="1"/><text x="55.6667%" y="111.50"></text></g><g><title>__close (2 samples, 0.83%)</title><rect x="55.8333%" y="117" width="0.8333%" height="15" fill="rgb(222,22,37)" fg:x="134" fg:w="2"/><text x="56.0833%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="55.8333%" y="101" width="0.8333%" height="15" fill="rgb(237,53,32)" fg:x="134" fg:w="2"/><text x="56.0833%" y="111.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="56.6667%" y="117" width="0.4167%" height="15" fill="rgb(233,25,53)" fg:x="136" fg:w="1"/><text x="56.9167%" y="127.50"></text></g><g><title>[libudev.so.1.7.8] (5 samples, 2.08%)</title><rect x="55.4167%" y="133" width="2.0833%" height="15" fill="rgb(210,40,34)" fg:x="133" fg:w="5"/><text x="55.6667%" y="143.50">[..</text></g><g><title>open64 (1 samples, 0.42%)</title><rect x="57.0833%" y="117" width="0.4167%" height="15" fill="rgb(241,220,44)" fg:x="137" fg:w="1"/><text x="57.3333%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="57.0833%" y="101" width="0.4167%" height="15" fill="rgb(235,28,35)" fg:x="137" fg:w="1"/><text x="57.3333%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="57.0833%" y="85" width="0.4167%" height="15" fill="rgb(210,56,17)" fg:x="137" fg:w="1"/><text x="57.3333%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="57.0833%" y="69" width="0.4167%" height="15" fill="rgb(224,130,29)" fg:x="137" fg:w="1"/><text x="57.3333%" y="79.50"></text></g><g><title>__strndup (1 samples, 0.42%)</title><rect x="57.5000%" y="133" width="0.4167%" height="15" fill="rgb(235,212,8)" fg:x="138" fg:w="1"/><text x="57.7500%" y="143.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="57.5000%" y="117" width="0.4167%" height="15" fill="rgb(223,33,50)" fg:x="138" fg:w="1"/><text x="57.7500%" y="127.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="57.5000%" y="101" width="0.4167%" height="15" fill="rgb(219,149,13)" fg:x="138" fg:w="1"/><text x="57.7500%" y="111.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="57.5000%" y="85" width="0.4167%" height="15" fill="rgb(250,156,29)" fg:x="138" fg:w="1"/><text x="57.7500%" y="95.50"></text></g><g><title>fstatat64 (2 samples, 0.83%)</title><rect x="57.9167%" y="133" width="0.8333%" height="15" fill="rgb(216,193,19)" fg:x="139" fg:w="2"/><text x="58.1667%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="57.9167%" y="117" width="0.8333%" height="15" fill="rgb(216,135,14)" fg:x="139" fg:w="2"/><text x="58.1667%" y="127.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="57.9167%" y="101" width="0.8333%" height="15" fill="rgb(241,47,5)" fg:x="139" fg:w="2"/><text x="58.1667%" y="111.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="57.9167%" y="85" width="0.8333%" height="15" fill="rgb(233,42,35)" fg:x="139" fg:w="2"/><text x="58.1667%" y="95.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="57.9167%" y="69" width="0.8333%" height="15" fill="rgb(231,13,6)" fg:x="139" fg:w="2"/><text x="58.1667%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="57.9167%" y="53" width="0.8333%" height="15" fill="rgb(207,181,40)" fg:x="139" fg:w="2"/><text x="58.1667%" y="63.50"></text></g><g><title>[libudev.so.1.7.8] (15 samples, 6.25%)</title><rect x="53.3333%" y="165" width="6.2500%" height="15" fill="rgb(254,173,49)" fg:x="128" fg:w="15"/><text x="53.5833%" y="175.50">[libudev..</text></g><g><title>[libudev.so.1.7.8] (12 samples, 5.00%)</title><rect x="54.5833%" y="149" width="5.0000%" height="15" fill="rgb(221,1,38)" fg:x="131" fg:w="12"/><text x="54.8333%" y="159.50">[libud..</text></g><g><title>openat64 (2 samples, 0.83%)</title><rect x="58.7500%" y="133" width="0.8333%" height="15" fill="rgb(206,124,46)" fg:x="141" fg:w="2"/><text x="59.0000%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="58.7500%" y="117" width="0.8333%" height="15" fill="rgb(249,21,11)" fg:x="141" fg:w="2"/><text x="59.0000%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="59.1667%" y="101" width="0.4167%" height="15" fill="rgb(222,201,40)" fg:x="142" fg:w="1"/><text x="59.4167%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="59.1667%" y="85" width="0.4167%" height="15" fill="rgb(235,61,29)" fg:x="142" fg:w="1"/><text x="59.4167%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="59.1667%" y="69" width="0.4167%" height="15" fill="rgb(219,207,3)" fg:x="142" fg:w="1"/><text x="59.4167%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="59.1667%" y="53" width="0.4167%" height="15" fill="rgb(222,56,46)" fg:x="142" fg:w="1"/><text x="59.4167%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="59.1667%" y="37" width="0.4167%" height="15" fill="rgb(239,76,54)" fg:x="142" fg:w="1"/><text x="59.4167%" y="47.50"></text></g><g><title>[libinput.so.10.13.0] (49 samples, 20.42%)</title><rect x="39.5833%" y="309" width="20.4167%" height="15" fill="rgb(231,124,27)" fg:x="95" fg:w="49"/><text x="39.8333%" y="319.50">[libinput.so.10.13.0]</text></g><g><title>libwacom_new_from_path (33 samples, 13.75%)</title><rect x="46.2500%" y="293" width="13.7500%" height="15" fill="rgb(249,195,6)" fg:x="111" fg:w="33"/><text x="46.5000%" y="303.50">libwacom_new_from_path</text></g><g><title>g_udev_client_query_by_subsystem (31 samples, 12.92%)</title><rect x="47.0833%" y="277" width="12.9167%" height="15" fill="rgb(237,174,47)" fg:x="113" fg:w="31"/><text x="47.3333%" y="287.50">g_udev_client_query..</text></g><g><title>udev_enumerate_scan_devices (16 samples, 6.67%)</title><rect x="53.3333%" y="261" width="6.6667%" height="15" fill="rgb(206,201,31)" fg:x="128" fg:w="16"/><text x="53.5833%" y="271.50">udev_enum..</text></g><g><title>[libudev.so.1.7.8] (16 samples, 6.67%)</title><rect x="53.3333%" y="245" width="6.6667%" height="15" fill="rgb(231,57,52)" fg:x="128" fg:w="16"/><text x="53.5833%" y="255.50">[libudev...</text></g><g><title>[libudev.so.1.7.8] (16 samples, 6.67%)</title><rect x="53.3333%" y="229" width="6.6667%" height="15" fill="rgb(248,177,22)" fg:x="128" fg:w="16"/><text x="53.5833%" y="239.50">[libudev...</text></g><g><title>[libudev.so.1.7.8] (16 samples, 6.67%)</title><rect x="53.3333%" y="213" width="6.6667%" height="15" fill="rgb(215,211,37)" fg:x="128" fg:w="16"/><text x="53.5833%" y="223.50">[libudev...</text></g><g><title>[libudev.so.1.7.8] (16 samples, 6.67%)</title><rect x="53.3333%" y="197" width="6.6667%" height="15" fill="rgb(241,128,51)" fg:x="128" fg:w="16"/><text x="53.5833%" y="207.50">[libudev...</text></g><g><title>[libudev.so.1.7.8] (16 samples, 6.67%)</title><rect x="53.3333%" y="181" width="6.6667%" height="15" fill="rgb(227,165,31)" fg:x="128" fg:w="16"/><text x="53.5833%" y="191.50">[libudev...</text></g><g><title>__strdup (1 samples, 0.42%)</title><rect x="59.5833%" y="165" width="0.4167%" height="15" fill="rgb(228,167,24)" fg:x="143" fg:w="1"/><text x="59.8333%" y="175.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="59.5833%" y="149" width="0.4167%" height="15" fill="rgb(228,143,12)" fg:x="143" fg:w="1"/><text x="59.8333%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="59.5833%" y="133" width="0.4167%" height="15" fill="rgb(249,149,8)" fg:x="143" fg:w="1"/><text x="59.8333%" y="143.50"></text></g><g><title>cfree (3 samples, 1.25%)</title><rect x="60.0000%" y="309" width="1.2500%" height="15" fill="rgb(243,35,44)" fg:x="144" fg:w="3"/><text x="60.2500%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="60.8333%" y="293" width="0.4167%" height="15" fill="rgb(246,89,9)" fg:x="146" fg:w="1"/><text x="61.0833%" y="303.50"></text></g><g><title>libevdev_free (1 samples, 0.42%)</title><rect x="61.2500%" y="309" width="0.4167%" height="15" fill="rgb(233,213,13)" fg:x="147" fg:w="1"/><text x="61.5000%" y="319.50"></text></g><g><title>cfree (1 samples, 0.42%)</title><rect x="61.2500%" y="293" width="0.4167%" height="15" fill="rgb(233,141,41)" fg:x="147" fg:w="1"/><text x="61.5000%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="61.2500%" y="277" width="0.4167%" height="15" fill="rgb(239,167,4)" fg:x="147" fg:w="1"/><text x="61.5000%" y="287.50"></text></g><g><title>[libc.so.6] (3 samples, 1.25%)</title><rect x="62.5000%" y="277" width="1.2500%" height="15" fill="rgb(209,217,16)" fg:x="150" fg:w="3"/><text x="62.7500%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="63.3333%" y="261" width="0.4167%" height="15" fill="rgb(219,88,35)" fg:x="152" fg:w="1"/><text x="63.5833%" y="271.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="63.3333%" y="245" width="0.4167%" height="15" fill="rgb(220,193,23)" fg:x="152" fg:w="1"/><text x="63.5833%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="63.3333%" y="229" width="0.4167%" height="15" fill="rgb(230,90,52)" fg:x="152" fg:w="1"/><text x="63.5833%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="63.3333%" y="213" width="0.4167%" height="15" fill="rgb(252,106,19)" fg:x="152" fg:w="1"/><text x="63.5833%" y="223.50"></text></g><g><title>g_key_file_get_integer (1 samples, 0.42%)</title><rect x="63.7500%" y="261" width="0.4167%" height="15" fill="rgb(206,74,20)" fg:x="153" fg:w="1"/><text x="64.0000%" y="271.50"></text></g><g><title>g_key_file_get_value (1 samples, 0.42%)</title><rect x="63.7500%" y="245" width="0.4167%" height="15" fill="rgb(230,138,44)" fg:x="153" fg:w="1"/><text x="64.0000%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="63.7500%" y="229" width="0.4167%" height="15" fill="rgb(235,182,43)" fg:x="153" fg:w="1"/><text x="64.0000%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="63.7500%" y="213" width="0.4167%" height="15" fill="rgb(242,16,51)" fg:x="153" fg:w="1"/><text x="64.0000%" y="223.50"></text></g><g><title>[libwacom.so.9.0.0] (2 samples, 0.83%)</title><rect x="63.7500%" y="277" width="0.8333%" height="15" fill="rgb(248,9,4)" fg:x="153" fg:w="2"/><text x="64.0000%" y="287.50"></text></g><g><title>g_strdup_printf (1 samples, 0.42%)</title><rect x="64.1667%" y="261" width="0.4167%" height="15" fill="rgb(210,31,22)" fg:x="154" fg:w="1"/><text x="64.4167%" y="271.50"></text></g><g><title>g_strdup_vprintf (1 samples, 0.42%)</title><rect x="64.1667%" y="245" width="0.4167%" height="15" fill="rgb(239,54,39)" fg:x="154" fg:w="1"/><text x="64.4167%" y="255.50"></text></g><g><title>g_vasprintf (1 samples, 0.42%)</title><rect x="64.1667%" y="229" width="0.4167%" height="15" fill="rgb(230,99,41)" fg:x="154" fg:w="1"/><text x="64.4167%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="64.1667%" y="213" width="0.4167%" height="15" fill="rgb(253,106,12)" fg:x="154" fg:w="1"/><text x="64.4167%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="64.1667%" y="197" width="0.4167%" height="15" fill="rgb(213,46,41)" fg:x="154" fg:w="1"/><text x="64.4167%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="64.1667%" y="181" width="0.4167%" height="15" fill="rgb(215,133,35)" fg:x="154" fg:w="1"/><text x="64.4167%" y="191.50"></text></g><g><title>g_array_append_vals (1 samples, 0.42%)</title><rect x="64.5833%" y="277" width="0.4167%" height="15" fill="rgb(213,28,5)" fg:x="155" fg:w="1"/><text x="64.8333%" y="287.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="64.5833%" y="261" width="0.4167%" height="15" fill="rgb(215,77,49)" fg:x="155" fg:w="1"/><text x="64.8333%" y="271.50"></text></g><g><title>g_realloc (1 samples, 0.42%)</title><rect x="64.5833%" y="245" width="0.4167%" height="15" fill="rgb(248,100,22)" fg:x="155" fg:w="1"/><text x="64.8333%" y="255.50"></text></g><g><title>realloc (1 samples, 0.42%)</title><rect x="64.5833%" y="229" width="0.4167%" height="15" fill="rgb(208,67,9)" fg:x="155" fg:w="1"/><text x="64.8333%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="64.5833%" y="213" width="0.4167%" height="15" fill="rgb(219,133,21)" fg:x="155" fg:w="1"/><text x="64.8333%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="64.5833%" y="197" width="0.4167%" height="15" fill="rgb(246,46,29)" fg:x="155" fg:w="1"/><text x="64.8333%" y="207.50"></text></g><g><title>g_hash_table_iter_next (1 samples, 0.42%)</title><rect x="65.0000%" y="277" width="0.4167%" height="15" fill="rgb(246,185,52)" fg:x="156" fg:w="1"/><text x="65.2500%" y="287.50"></text></g><g><title>g_hash_table_new_full (1 samples, 0.42%)</title><rect x="65.4167%" y="277" width="0.4167%" height="15" fill="rgb(252,136,11)" fg:x="157" fg:w="1"/><text x="65.6667%" y="287.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="65.4167%" y="261" width="0.4167%" height="15" fill="rgb(219,138,53)" fg:x="157" fg:w="1"/><text x="65.6667%" y="271.50"></text></g><g><title>g_malloc0 (1 samples, 0.42%)</title><rect x="65.4167%" y="245" width="0.4167%" height="15" fill="rgb(211,51,23)" fg:x="157" fg:w="1"/><text x="65.6667%" y="255.50"></text></g><g><title>__libc_calloc (1 samples, 0.42%)</title><rect x="65.4167%" y="229" width="0.4167%" height="15" fill="rgb(247,221,28)" fg:x="157" fg:w="1"/><text x="65.6667%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="65.4167%" y="213" width="0.4167%" height="15" fill="rgb(251,222,45)" fg:x="157" fg:w="1"/><text x="65.6667%" y="223.50"></text></g><g><title>g_key_file_get_boolean (1 samples, 0.42%)</title><rect x="65.8333%" y="277" width="0.4167%" height="15" fill="rgb(217,162,53)" fg:x="158" fg:w="1"/><text x="66.0833%" y="287.50"></text></g><g><title>g_key_file_get_value (1 samples, 0.42%)</title><rect x="65.8333%" y="261" width="0.4167%" height="15" fill="rgb(229,93,14)" fg:x="158" fg:w="1"/><text x="66.0833%" y="271.50"></text></g><g><title>g_set_error (1 samples, 0.42%)</title><rect x="65.8333%" y="245" width="0.4167%" height="15" fill="rgb(209,67,49)" fg:x="158" fg:w="1"/><text x="66.0833%" y="255.50"></text></g><g><title>g_error_new_valist (1 samples, 0.42%)</title><rect x="65.8333%" y="229" width="0.4167%" height="15" fill="rgb(213,87,29)" fg:x="158" fg:w="1"/><text x="66.0833%" y="239.50"></text></g><g><title>g_strdup_vprintf (1 samples, 0.42%)</title><rect x="65.8333%" y="213" width="0.4167%" height="15" fill="rgb(205,151,52)" fg:x="158" fg:w="1"/><text x="66.0833%" y="223.50"></text></g><g><title>g_vasprintf (1 samples, 0.42%)</title><rect x="65.8333%" y="197" width="0.4167%" height="15" fill="rgb(253,215,39)" fg:x="158" fg:w="1"/><text x="66.0833%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="65.8333%" y="181" width="0.4167%" height="15" fill="rgb(221,220,41)" fg:x="158" fg:w="1"/><text x="66.0833%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="65.8333%" y="165" width="0.4167%" height="15" fill="rgb(218,133,21)" fg:x="158" fg:w="1"/><text x="66.0833%" y="175.50"></text></g><g><title>g_hash_table_lookup (1 samples, 0.42%)</title><rect x="66.6667%" y="245" width="0.4167%" height="15" fill="rgb(221,193,43)" fg:x="160" fg:w="1"/><text x="66.9167%" y="255.50"></text></g><g><title>g_key_file_get_integer (3 samples, 1.25%)</title><rect x="66.2500%" y="277" width="1.2500%" height="15" fill="rgb(240,128,52)" fg:x="159" fg:w="3"/><text x="66.5000%" y="287.50"></text></g><g><title>g_key_file_get_value (2 samples, 0.83%)</title><rect x="66.6667%" y="261" width="0.8333%" height="15" fill="rgb(253,114,12)" fg:x="160" fg:w="2"/><text x="66.9167%" y="271.50"></text></g><g><title>g_set_error (1 samples, 0.42%)</title><rect x="67.0833%" y="245" width="0.4167%" height="15" fill="rgb(215,223,47)" fg:x="161" fg:w="1"/><text x="67.3333%" y="255.50"></text></g><g><title>g_error_new_valist (1 samples, 0.42%)</title><rect x="67.0833%" y="229" width="0.4167%" height="15" fill="rgb(248,225,23)" fg:x="161" fg:w="1"/><text x="67.3333%" y="239.50"></text></g><g><title>g_strdup_vprintf (1 samples, 0.42%)</title><rect x="67.0833%" y="213" width="0.4167%" height="15" fill="rgb(250,108,0)" fg:x="161" fg:w="1"/><text x="67.3333%" y="223.50"></text></g><g><title>g_vasprintf (1 samples, 0.42%)</title><rect x="67.0833%" y="197" width="0.4167%" height="15" fill="rgb(228,208,7)" fg:x="161" fg:w="1"/><text x="67.3333%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="67.0833%" y="181" width="0.4167%" height="15" fill="rgb(244,45,10)" fg:x="161" fg:w="1"/><text x="67.3333%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="67.0833%" y="165" width="0.4167%" height="15" fill="rgb(207,125,25)" fg:x="161" fg:w="1"/><text x="67.3333%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="67.0833%" y="149" width="0.4167%" height="15" fill="rgb(210,195,18)" fg:x="161" fg:w="1"/><text x="67.3333%" y="159.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="67.5000%" y="261" width="0.4167%" height="15" fill="rgb(249,80,12)" fg:x="162" fg:w="1"/><text x="67.7500%" y="271.50"></text></g><g><title>g_key_file_get_string (3 samples, 1.25%)</title><rect x="67.5000%" y="277" width="1.2500%" height="15" fill="rgb(221,65,9)" fg:x="162" fg:w="3"/><text x="67.7500%" y="287.50"></text></g><g><title>g_key_file_get_value (2 samples, 0.83%)</title><rect x="67.9167%" y="261" width="0.8333%" height="15" fill="rgb(235,49,36)" fg:x="163" fg:w="2"/><text x="68.1667%" y="271.50"></text></g><g><title>g_hash_table_lookup (2 samples, 0.83%)</title><rect x="67.9167%" y="245" width="0.8333%" height="15" fill="rgb(225,32,20)" fg:x="163" fg:w="2"/><text x="68.1667%" y="255.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (2 samples, 0.83%)</title><rect x="68.7500%" y="261" width="0.8333%" height="15" fill="rgb(215,141,46)" fg:x="165" fg:w="2"/><text x="69.0000%" y="271.50"></text></g><g><title>g_error_free (1 samples, 0.42%)</title><rect x="69.5833%" y="261" width="0.4167%" height="15" fill="rgb(250,160,47)" fg:x="167" fg:w="1"/><text x="69.8333%" y="271.50"></text></g><g><title>cfree (1 samples, 0.42%)</title><rect x="69.5833%" y="245" width="0.4167%" height="15" fill="rgb(216,222,40)" fg:x="167" fg:w="1"/><text x="69.8333%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="69.5833%" y="229" width="0.4167%" height="15" fill="rgb(234,217,39)" fg:x="167" fg:w="1"/><text x="69.8333%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="70.0000%" y="245" width="0.4167%" height="15" fill="rgb(207,178,40)" fg:x="168" fg:w="1"/><text x="70.2500%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="70.0000%" y="229" width="0.4167%" height="15" fill="rgb(221,136,13)" fg:x="168" fg:w="1"/><text x="70.2500%" y="239.50"></text></g><g><title>g_hash_table_lookup (1 samples, 0.42%)</title><rect x="70.4167%" y="245" width="0.4167%" height="15" fill="rgb(249,199,10)" fg:x="169" fg:w="1"/><text x="70.6667%" y="255.50"></text></g><g><title>g_key_file_get_value (3 samples, 1.25%)</title><rect x="70.0000%" y="261" width="1.2500%" height="15" fill="rgb(249,222,13)" fg:x="168" fg:w="3"/><text x="70.2500%" y="271.50"></text></g><g><title>g_set_error (1 samples, 0.42%)</title><rect x="70.8333%" y="245" width="0.4167%" height="15" fill="rgb(244,185,38)" fg:x="170" fg:w="1"/><text x="71.0833%" y="255.50"></text></g><g><title>g_error_new_valist (1 samples, 0.42%)</title><rect x="70.8333%" y="229" width="0.4167%" height="15" fill="rgb(236,202,9)" fg:x="170" fg:w="1"/><text x="71.0833%" y="239.50"></text></g><g><title>g_strdup_vprintf (1 samples, 0.42%)</title><rect x="70.8333%" y="213" width="0.4167%" height="15" fill="rgb(250,229,37)" fg:x="170" fg:w="1"/><text x="71.0833%" y="223.50"></text></g><g><title>g_vasprintf (1 samples, 0.42%)</title><rect x="70.8333%" y="197" width="0.4167%" height="15" fill="rgb(206,174,23)" fg:x="170" fg:w="1"/><text x="71.0833%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="70.8333%" y="181" width="0.4167%" height="15" fill="rgb(211,33,43)" fg:x="170" fg:w="1"/><text x="71.0833%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="70.8333%" y="165" width="0.4167%" height="15" fill="rgb(245,58,50)" fg:x="170" fg:w="1"/><text x="71.0833%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="70.8333%" y="149" width="0.4167%" height="15" fill="rgb(244,68,36)" fg:x="170" fg:w="1"/><text x="71.0833%" y="159.50"></text></g><g><title>g_slice_free_chain_with_offset (2 samples, 0.83%)</title><rect x="71.2500%" y="261" width="0.8333%" height="15" fill="rgb(232,229,15)" fg:x="171" fg:w="2"/><text x="71.5000%" y="271.50"></text></g><g><title>cfree (2 samples, 0.83%)</title><rect x="71.2500%" y="245" width="0.8333%" height="15" fill="rgb(254,30,23)" fg:x="171" fg:w="2"/><text x="71.5000%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="71.6667%" y="229" width="0.4167%" height="15" fill="rgb(235,160,14)" fg:x="172" fg:w="1"/><text x="71.9167%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="72.0833%" y="245" width="0.4167%" height="15" fill="rgb(212,155,44)" fg:x="173" fg:w="1"/><text x="72.3333%" y="255.50"></text></g><g><title>g_key_file_get_string_list (10 samples, 4.17%)</title><rect x="68.7500%" y="277" width="4.1667%" height="15" fill="rgb(226,2,50)" fg:x="165" fg:w="10"/><text x="69.0000%" y="287.50">g_key..</text></g><g><title>g_strdup (2 samples, 0.83%)</title><rect x="72.0833%" y="261" width="0.8333%" height="15" fill="rgb(234,177,6)" fg:x="173" fg:w="2"/><text x="72.3333%" y="271.50"></text></g><g><title>g_malloc (1 samples, 0.42%)</title><rect x="72.5000%" y="245" width="0.4167%" height="15" fill="rgb(217,24,9)" fg:x="174" fg:w="1"/><text x="72.7500%" y="255.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="72.5000%" y="229" width="0.4167%" height="15" fill="rgb(220,13,46)" fg:x="174" fg:w="1"/><text x="72.7500%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="72.5000%" y="213" width="0.4167%" height="15" fill="rgb(239,221,27)" fg:x="174" fg:w="1"/><text x="72.7500%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="72.9167%" y="229" width="0.4167%" height="15" fill="rgb(222,198,25)" fg:x="175" fg:w="1"/><text x="73.1667%" y="239.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (1 samples, 0.42%)</title><rect x="73.3333%" y="213" width="0.4167%" height="15" fill="rgb(211,99,13)" fg:x="176" fg:w="1"/><text x="73.5833%" y="223.50"></text></g><g><title>g_list_insert_before (1 samples, 0.42%)</title><rect x="73.7500%" y="213" width="0.4167%" height="15" fill="rgb(232,111,31)" fg:x="177" fg:w="1"/><text x="74.0000%" y="223.50"></text></g><g><title>g_malloc (1 samples, 0.42%)</title><rect x="73.7500%" y="197" width="0.4167%" height="15" fill="rgb(245,82,37)" fg:x="177" fg:w="1"/><text x="74.0000%" y="207.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="73.7500%" y="181" width="0.4167%" height="15" fill="rgb(227,149,46)" fg:x="177" fg:w="1"/><text x="74.0000%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="73.7500%" y="165" width="0.4167%" height="15" fill="rgb(218,36,50)" fg:x="177" fg:w="1"/><text x="74.0000%" y="175.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (4 samples, 1.67%)</title><rect x="72.9167%" y="245" width="1.6667%" height="15" fill="rgb(226,80,48)" fg:x="175" fg:w="4"/><text x="73.1667%" y="255.50"></text></g><g><title>[libglib-2.0.so.0.7800.3] (3 samples, 1.25%)</title><rect x="73.3333%" y="229" width="1.2500%" height="15" fill="rgb(238,224,15)" fg:x="176" fg:w="3"/><text x="73.5833%" y="239.50"></text></g><g><title>g_strndup (1 samples, 0.42%)</title><rect x="74.1667%" y="213" width="0.4167%" height="15" fill="rgb(241,136,10)" fg:x="178" fg:w="1"/><text x="74.4167%" y="223.50"></text></g><g><title>g_malloc (1 samples, 0.42%)</title><rect x="74.1667%" y="197" width="0.4167%" height="15" fill="rgb(208,32,45)" fg:x="178" fg:w="1"/><text x="74.4167%" y="207.50"></text></g><g><title>g_key_file_load_from_file (6 samples, 2.50%)</title><rect x="72.9167%" y="277" width="2.5000%" height="15" fill="rgb(207,135,9)" fg:x="175" fg:w="6"/><text x="73.1667%" y="287.50">g_..</text></g><g><title>[libglib-2.0.so.0.7800.3] (6 samples, 2.50%)</title><rect x="72.9167%" y="261" width="2.5000%" height="15" fill="rgb(206,86,44)" fg:x="175" fg:w="6"/><text x="73.1667%" y="271.50">[l..</text></g><g><title>read (2 samples, 0.83%)</title><rect x="74.5833%" y="245" width="0.8333%" height="15" fill="rgb(245,177,15)" fg:x="179" fg:w="2"/><text x="74.8333%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="74.5833%" y="229" width="0.8333%" height="15" fill="rgb(206,64,50)" fg:x="179" fg:w="2"/><text x="74.8333%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="74.5833%" y="213" width="0.8333%" height="15" fill="rgb(234,36,40)" fg:x="179" fg:w="2"/><text x="74.8333%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="75.0000%" y="197" width="0.4167%" height="15" fill="rgb(213,64,8)" fg:x="180" fg:w="1"/><text x="75.2500%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="75.0000%" y="181" width="0.4167%" height="15" fill="rgb(210,75,36)" fg:x="180" fg:w="1"/><text x="75.2500%" y="191.50"></text></g><g><title>libwacom_database_new (34 samples, 14.17%)</title><rect x="61.6667%" y="309" width="14.1667%" height="15" fill="rgb(229,88,21)" fg:x="148" fg:w="34"/><text x="61.9167%" y="319.50">libwacom_database_new</text></g><g><title>[libwacom.so.9.0.0] (34 samples, 14.17%)</title><rect x="61.6667%" y="293" width="14.1667%" height="15" fill="rgb(252,204,47)" fg:x="148" fg:w="34"/><text x="61.9167%" y="303.50">[libwacom.so.9.0.0]</text></g><g><title>g_malloc0 (1 samples, 0.42%)</title><rect x="75.4167%" y="277" width="0.4167%" height="15" fill="rgb(208,77,27)" fg:x="181" fg:w="1"/><text x="75.6667%" y="287.50"></text></g><g><title>__libc_calloc (1 samples, 0.42%)</title><rect x="75.4167%" y="261" width="0.4167%" height="15" fill="rgb(221,76,26)" fg:x="181" fg:w="1"/><text x="75.6667%" y="271.50"></text></g><g><title>udev_device_get_parent (2 samples, 0.83%)</title><rect x="75.8333%" y="309" width="0.8333%" height="15" fill="rgb(225,139,18)" fg:x="182" fg:w="2"/><text x="76.0833%" y="319.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="75.8333%" y="293" width="0.8333%" height="15" fill="rgb(230,137,11)" fg:x="182" fg:w="2"/><text x="76.0833%" y="303.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="75.8333%" y="277" width="0.8333%" height="15" fill="rgb(212,28,1)" fg:x="182" fg:w="2"/><text x="76.0833%" y="287.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="76.2500%" y="261" width="0.4167%" height="15" fill="rgb(248,164,17)" fg:x="183" fg:w="1"/><text x="76.5000%" y="271.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="76.2500%" y="245" width="0.4167%" height="15" fill="rgb(222,171,42)" fg:x="183" fg:w="1"/><text x="76.5000%" y="255.50"></text></g><g><title>open64 (1 samples, 0.42%)</title><rect x="76.2500%" y="229" width="0.4167%" height="15" fill="rgb(243,84,45)" fg:x="183" fg:w="1"/><text x="76.5000%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="76.2500%" y="213" width="0.4167%" height="15" fill="rgb(252,49,23)" fg:x="183" fg:w="1"/><text x="76.5000%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="76.2500%" y="197" width="0.4167%" height="15" fill="rgb(215,19,7)" fg:x="183" fg:w="1"/><text x="76.5000%" y="207.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="78.3333%" y="229" width="0.8333%" height="15" fill="rgb(238,81,41)" fg:x="188" fg:w="2"/><text x="78.5833%" y="239.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="78.3333%" y="213" width="0.8333%" height="15" fill="rgb(210,199,37)" fg:x="188" fg:w="2"/><text x="78.5833%" y="223.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="78.3333%" y="197" width="0.8333%" height="15" fill="rgb(244,192,49)" fg:x="188" fg:w="2"/><text x="78.5833%" y="207.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="78.7500%" y="181" width="0.4167%" height="15" fill="rgb(226,211,11)" fg:x="189" fg:w="1"/><text x="79.0000%" y="191.50"></text></g><g><title>[libinput.so.10.13.0] (105 samples, 43.75%)</title><rect x="35.8333%" y="325" width="43.7500%" height="15" fill="rgb(236,162,54)" fg:x="86" fg:w="105"/><text x="36.0833%" y="335.50">[libinput.so.10.13.0]</text></g><g><title>udev_device_get_property_value (7 samples, 2.92%)</title><rect x="76.6667%" y="309" width="2.9167%" height="15" fill="rgb(220,229,9)" fg:x="184" fg:w="7"/><text x="76.9167%" y="319.50">ud..</text></g><g><title>[libudev.so.1.7.8] (7 samples, 2.92%)</title><rect x="76.6667%" y="293" width="2.9167%" height="15" fill="rgb(250,87,22)" fg:x="184" fg:w="7"/><text x="76.9167%" y="303.50">[l..</text></g><g><title>[libudev.so.1.7.8] (7 samples, 2.92%)</title><rect x="76.6667%" y="277" width="2.9167%" height="15" fill="rgb(239,43,17)" fg:x="184" fg:w="7"/><text x="76.9167%" y="287.50">[l..</text></g><g><title>[libudev.so.1.7.8] (4 samples, 1.67%)</title><rect x="77.9167%" y="261" width="1.6667%" height="15" fill="rgb(231,177,25)" fg:x="187" fg:w="4"/><text x="78.1667%" y="271.50"></text></g><g><title>[libudev.so.1.7.8] (3 samples, 1.25%)</title><rect x="78.3333%" y="245" width="1.2500%" height="15" fill="rgb(219,179,1)" fg:x="188" fg:w="3"/><text x="78.5833%" y="255.50"></text></g><g><title>__strdup (1 samples, 0.42%)</title><rect x="79.1667%" y="229" width="0.4167%" height="15" fill="rgb(238,219,53)" fg:x="190" fg:w="1"/><text x="79.4167%" y="239.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="79.1667%" y="213" width="0.4167%" height="15" fill="rgb(232,167,36)" fg:x="190" fg:w="1"/><text x="79.4167%" y="223.50"></text></g><g><title>[libinput.so.10.13.0] (108 samples, 45.00%)</title><rect x="35.0000%" y="357" width="45.0000%" height="15" fill="rgb(244,19,51)" fg:x="84" fg:w="108"/><text x="35.2500%" y="367.50">[libinput.so.10.13.0]</text></g><g><title>[libinput.so.10.13.0] (108 samples, 45.00%)</title><rect x="35.0000%" y="341" width="45.0000%" height="15" fill="rgb(224,6,22)" fg:x="84" fg:w="108"/><text x="35.2500%" y="351.50">[libinput.so.10.13.0]</text></g><g><title>libevdev_new_from_fd (1 samples, 0.42%)</title><rect x="79.5833%" y="325" width="0.4167%" height="15" fill="rgb(224,145,5)" fg:x="191" fg:w="1"/><text x="79.8333%" y="335.50"></text></g><g><title>libevdev_set_fd (1 samples, 0.42%)</title><rect x="79.5833%" y="309" width="0.4167%" height="15" fill="rgb(234,130,49)" fg:x="191" fg:w="1"/><text x="79.8333%" y="319.50"></text></g><g><title>libevdev_has_event_code (1 samples, 0.42%)</title><rect x="79.5833%" y="293" width="0.4167%" height="15" fill="rgb(254,6,2)" fg:x="191" fg:w="1"/><text x="79.8333%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="80.0000%" y="293" width="0.4167%" height="15" fill="rgb(208,96,46)" fg:x="192" fg:w="1"/><text x="80.2500%" y="303.50"></text></g><g><title>[libudev.so.1.7.8] (2 samples, 0.83%)</title><rect x="80.4167%" y="277" width="0.8333%" height="15" fill="rgb(239,3,39)" fg:x="193" fg:w="2"/><text x="80.6667%" y="287.50"></text></g><g><title>__strdup (1 samples, 0.42%)</title><rect x="81.2500%" y="277" width="0.4167%" height="15" fill="rgb(233,210,1)" fg:x="195" fg:w="1"/><text x="81.5000%" y="287.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="81.2500%" y="261" width="0.4167%" height="15" fill="rgb(244,137,37)" fg:x="195" fg:w="1"/><text x="81.5000%" y="271.50"></text></g><g><title>udev_device_get_is_initialized (5 samples, 2.08%)</title><rect x="80.0000%" y="357" width="2.0833%" height="15" fill="rgb(240,136,2)" fg:x="192" fg:w="5"/><text x="80.2500%" y="367.50">u..</text></g><g><title>[libudev.so.1.7.8] (5 samples, 2.08%)</title><rect x="80.0000%" y="341" width="2.0833%" height="15" fill="rgb(239,18,37)" fg:x="192" fg:w="5"/><text x="80.2500%" y="351.50">[..</text></g><g><title>[libudev.so.1.7.8] (5 samples, 2.08%)</title><rect x="80.0000%" y="325" width="2.0833%" height="15" fill="rgb(218,185,22)" fg:x="192" fg:w="5"/><text x="80.2500%" y="335.50">[..</text></g><g><title>[libudev.so.1.7.8] (5 samples, 2.08%)</title><rect x="80.0000%" y="309" width="2.0833%" height="15" fill="rgb(225,218,4)" fg:x="192" fg:w="5"/><text x="80.2500%" y="319.50">[..</text></g><g><title>[libudev.so.1.7.8] (4 samples, 1.67%)</title><rect x="80.4167%" y="293" width="1.6667%" height="15" fill="rgb(230,182,32)" fg:x="193" fg:w="4"/><text x="80.6667%" y="303.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="81.6667%" y="277" width="0.4167%" height="15" fill="rgb(242,56,43)" fg:x="196" fg:w="1"/><text x="81.9167%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="81.6667%" y="261" width="0.4167%" height="15" fill="rgb(233,99,24)" fg:x="196" fg:w="1"/><text x="81.9167%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="81.6667%" y="245" width="0.4167%" height="15" fill="rgb(234,209,42)" fg:x="196" fg:w="1"/><text x="81.9167%" y="255.50"></text></g><g><title>udev_device_get_property_value (1 samples, 0.42%)</title><rect x="82.0833%" y="357" width="0.4167%" height="15" fill="rgb(227,7,12)" fg:x="197" fg:w="1"/><text x="82.3333%" y="367.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.0833%" y="341" width="0.4167%" height="15" fill="rgb(245,203,43)" fg:x="197" fg:w="1"/><text x="82.3333%" y="351.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.0833%" y="325" width="0.4167%" height="15" fill="rgb(238,205,33)" fg:x="197" fg:w="1"/><text x="82.3333%" y="335.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.0833%" y="309" width="0.4167%" height="15" fill="rgb(231,56,7)" fg:x="197" fg:w="1"/><text x="82.3333%" y="319.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.0833%" y="293" width="0.4167%" height="15" fill="rgb(244,186,29)" fg:x="197" fg:w="1"/><text x="82.3333%" y="303.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.0833%" y="277" width="0.4167%" height="15" fill="rgb(234,111,31)" fg:x="197" fg:w="1"/><text x="82.3333%" y="287.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.0833%" y="261" width="0.4167%" height="15" fill="rgb(241,149,10)" fg:x="197" fg:w="1"/><text x="82.3333%" y="271.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.0833%" y="245" width="0.4167%" height="15" fill="rgb(249,206,44)" fg:x="197" fg:w="1"/><text x="82.3333%" y="255.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="82.5000%" y="277" width="0.4167%" height="15" fill="rgb(251,153,30)" fg:x="198" fg:w="1"/><text x="82.7500%" y="287.50"></text></g><g><title>__close (1 samples, 0.42%)</title><rect x="82.5000%" y="261" width="0.4167%" height="15" fill="rgb(239,152,38)" fg:x="198" fg:w="1"/><text x="82.7500%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="82.5000%" y="245" width="0.4167%" height="15" fill="rgb(249,139,47)" fg:x="198" fg:w="1"/><text x="82.7500%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="82.5000%" y="229" width="0.4167%" height="15" fill="rgb(244,64,35)" fg:x="198" fg:w="1"/><text x="82.7500%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="82.5000%" y="213" width="0.4167%" height="15" fill="rgb(216,46,15)" fg:x="198" fg:w="1"/><text x="82.7500%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="82.5000%" y="197" width="0.4167%" height="15" fill="rgb(250,74,19)" fg:x="198" fg:w="1"/><text x="82.7500%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="82.5000%" y="181" width="0.4167%" height="15" fill="rgb(249,42,33)" fg:x="198" fg:w="1"/><text x="82.7500%" y="191.50"></text></g><g><title>__strdup (1 samples, 0.42%)</title><rect x="82.9167%" y="277" width="0.4167%" height="15" fill="rgb(242,149,17)" fg:x="199" fg:w="1"/><text x="83.1667%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="82.9167%" y="261" width="0.4167%" height="15" fill="rgb(244,29,21)" fg:x="199" fg:w="1"/><text x="83.1667%" y="271.50"></text></g><g><title>udev_device_new_from_syspath (3 samples, 1.25%)</title><rect x="82.5000%" y="357" width="1.2500%" height="15" fill="rgb(220,130,37)" fg:x="198" fg:w="3"/><text x="82.7500%" y="367.50"></text></g><g><title>[libudev.so.1.7.8] (3 samples, 1.25%)</title><rect x="82.5000%" y="341" width="1.2500%" height="15" fill="rgb(211,67,2)" fg:x="198" fg:w="3"/><text x="82.7500%" y="351.50"></text></g><g><title>[libudev.so.1.7.8] (3 samples, 1.25%)</title><rect x="82.5000%" y="325" width="1.2500%" height="15" fill="rgb(235,68,52)" fg:x="198" fg:w="3"/><text x="82.7500%" y="335.50"></text></g><g><title>[libudev.so.1.7.8] (3 samples, 1.25%)</title><rect x="82.5000%" y="309" width="1.2500%" height="15" fill="rgb(246,142,3)" fg:x="198" fg:w="3"/><text x="82.7500%" y="319.50"></text></g><g><title>[libudev.so.1.7.8] (3 samples, 1.25%)</title><rect x="82.5000%" y="293" width="1.2500%" height="15" fill="rgb(241,25,7)" fg:x="198" fg:w="3"/><text x="82.7500%" y="303.50"></text></g><g><title>openat64 (1 samples, 0.42%)</title><rect x="83.3333%" y="277" width="0.4167%" height="15" fill="rgb(242,119,39)" fg:x="200" fg:w="1"/><text x="83.5833%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="83.3333%" y="261" width="0.4167%" height="15" fill="rgb(241,98,45)" fg:x="200" fg:w="1"/><text x="83.5833%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="83.3333%" y="245" width="0.4167%" height="15" fill="rgb(254,28,30)" fg:x="200" fg:w="1"/><text x="83.5833%" y="255.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="83.7500%" y="325" width="0.4167%" height="15" fill="rgb(241,142,54)" fg:x="201" fg:w="1"/><text x="84.0000%" y="335.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="83.7500%" y="309" width="0.4167%" height="15" fill="rgb(222,85,15)" fg:x="201" fg:w="1"/><text x="84.0000%" y="319.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="83.7500%" y="293" width="0.4167%" height="15" fill="rgb(210,85,47)" fg:x="201" fg:w="1"/><text x="84.0000%" y="303.50"></text></g><g><title>cfree (1 samples, 0.42%)</title><rect x="83.7500%" y="277" width="0.4167%" height="15" fill="rgb(224,206,25)" fg:x="201" fg:w="1"/><text x="84.0000%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="83.7500%" y="261" width="0.4167%" height="15" fill="rgb(243,201,19)" fg:x="201" fg:w="1"/><text x="84.0000%" y="271.50"></text></g><g><title>udev_device_unref (2 samples, 0.83%)</title><rect x="83.7500%" y="357" width="0.8333%" height="15" fill="rgb(236,59,4)" fg:x="201" fg:w="2"/><text x="84.0000%" y="367.50"></text></g><g><title>udev_device_unref (2 samples, 0.83%)</title><rect x="83.7500%" y="341" width="0.8333%" height="15" fill="rgb(254,179,45)" fg:x="201" fg:w="2"/><text x="84.0000%" y="351.50"></text></g><g><title>udev_device_unref (1 samples, 0.42%)</title><rect x="84.1667%" y="325" width="0.4167%" height="15" fill="rgb(226,14,10)" fg:x="202" fg:w="1"/><text x="84.4167%" y="335.50"></text></g><g><title>udev_device_unref (1 samples, 0.42%)</title><rect x="84.1667%" y="309" width="0.4167%" height="15" fill="rgb(244,27,41)" fg:x="202" fg:w="1"/><text x="84.4167%" y="319.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="84.1667%" y="293" width="0.4167%" height="15" fill="rgb(235,35,32)" fg:x="202" fg:w="1"/><text x="84.4167%" y="303.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="84.1667%" y="277" width="0.4167%" height="15" fill="rgb(218,68,31)" fg:x="202" fg:w="1"/><text x="84.4167%" y="287.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="84.1667%" y="261" width="0.4167%" height="15" fill="rgb(207,120,37)" fg:x="202" fg:w="1"/><text x="84.4167%" y="271.50"></text></g><g><title>cfree (1 samples, 0.42%)</title><rect x="84.1667%" y="245" width="0.4167%" height="15" fill="rgb(227,98,0)" fg:x="202" fg:w="1"/><text x="84.4167%" y="255.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="84.5833%" y="341" width="0.4167%" height="15" fill="rgb(207,7,3)" fg:x="203" fg:w="1"/><text x="84.8333%" y="351.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="84.5833%" y="325" width="0.4167%" height="15" fill="rgb(206,98,19)" fg:x="203" fg:w="1"/><text x="84.8333%" y="335.50"></text></g><g><title>udev_enumerate_get_list_entry (2 samples, 0.83%)</title><rect x="84.5833%" y="357" width="0.8333%" height="15" fill="rgb(217,5,26)" fg:x="203" fg:w="2"/><text x="84.8333%" y="367.50"></text></g><g><title>qsort_r (1 samples, 0.42%)</title><rect x="85.0000%" y="341" width="0.4167%" height="15" fill="rgb(235,190,38)" fg:x="204" fg:w="1"/><text x="85.2500%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="85.0000%" y="325" width="0.4167%" height="15" fill="rgb(247,86,24)" fg:x="204" fg:w="1"/><text x="85.2500%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="85.0000%" y="309" width="0.4167%" height="15" fill="rgb(205,101,16)" fg:x="204" fg:w="1"/><text x="85.2500%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="85.0000%" y="293" width="0.4167%" height="15" fill="rgb(246,168,33)" fg:x="204" fg:w="1"/><text x="85.2500%" y="303.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="85.0000%" y="277" width="0.4167%" height="15" fill="rgb(231,114,1)" fg:x="204" fg:w="1"/><text x="85.2500%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="85.0000%" y="261" width="0.4167%" height="15" fill="rgb(207,184,53)" fg:x="204" fg:w="1"/><text x="85.2500%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="87.0833%" y="245" width="0.4167%" height="15" fill="rgb(224,95,51)" fg:x="209" fg:w="1"/><text x="87.3333%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="88.3333%" y="213" width="0.4167%" height="15" fill="rgb(212,188,45)" fg:x="212" fg:w="1"/><text x="88.5833%" y="223.50"></text></g><g><title>[libc.so.6] (2 samples, 0.83%)</title><rect x="88.7500%" y="197" width="0.8333%" height="15" fill="rgb(223,154,38)" fg:x="213" fg:w="2"/><text x="89.0000%" y="207.50"></text></g><g><title>[libc.so.6] (2 samples, 0.83%)</title><rect x="88.7500%" y="181" width="0.8333%" height="15" fill="rgb(251,22,52)" fg:x="213" fg:w="2"/><text x="89.0000%" y="191.50"></text></g><g><title>[libc.so.6] (2 samples, 0.83%)</title><rect x="88.7500%" y="165" width="0.8333%" height="15" fill="rgb(229,209,22)" fg:x="213" fg:w="2"/><text x="89.0000%" y="175.50"></text></g><g><title>[libudev.so.1.7.8] (6 samples, 2.50%)</title><rect x="87.5000%" y="229" width="2.5000%" height="15" fill="rgb(234,138,34)" fg:x="210" fg:w="6"/><text x="87.7500%" y="239.50">[l..</text></g><g><title>[libudev.so.1.7.8] (3 samples, 1.25%)</title><rect x="88.7500%" y="213" width="1.2500%" height="15" fill="rgb(212,95,11)" fg:x="213" fg:w="3"/><text x="89.0000%" y="223.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="89.5833%" y="197" width="0.4167%" height="15" fill="rgb(240,179,47)" fg:x="215" fg:w="1"/><text x="89.8333%" y="207.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="89.5833%" y="181" width="0.4167%" height="15" fill="rgb(240,163,11)" fg:x="215" fg:w="1"/><text x="89.8333%" y="191.50"></text></g><g><title>[libudev.so.1.7.8] (1 samples, 0.42%)</title><rect x="89.5833%" y="165" width="0.4167%" height="15" fill="rgb(236,37,12)" fg:x="215" fg:w="1"/><text x="89.8333%" y="175.50"></text></g><g><title>__close (1 samples, 0.42%)</title><rect x="90.0000%" y="229" width="0.4167%" height="15" fill="rgb(232,164,16)" fg:x="216" fg:w="1"/><text x="90.2500%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.0000%" y="213" width="0.4167%" height="15" fill="rgb(244,205,15)" fg:x="216" fg:w="1"/><text x="90.2500%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.0000%" y="197" width="0.4167%" height="15" fill="rgb(223,117,47)" fg:x="216" fg:w="1"/><text x="90.2500%" y="207.50"></text></g><g><title>fstatat64 (1 samples, 0.42%)</title><rect x="90.4167%" y="229" width="0.4167%" height="15" fill="rgb(244,107,35)" fg:x="217" fg:w="1"/><text x="90.6667%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.4167%" y="213" width="0.4167%" height="15" fill="rgb(205,140,8)" fg:x="217" fg:w="1"/><text x="90.6667%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.4167%" y="197" width="0.4167%" height="15" fill="rgb(228,84,46)" fg:x="217" fg:w="1"/><text x="90.6667%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.4167%" y="181" width="0.4167%" height="15" fill="rgb(254,188,9)" fg:x="217" fg:w="1"/><text x="90.6667%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.4167%" y="165" width="0.4167%" height="15" fill="rgb(206,112,54)" fg:x="217" fg:w="1"/><text x="90.6667%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.4167%" y="149" width="0.4167%" height="15" fill="rgb(216,84,49)" fg:x="217" fg:w="1"/><text x="90.6667%" y="159.50"></text></g><g><title>open64 (1 samples, 0.42%)</title><rect x="90.8333%" y="229" width="0.4167%" height="15" fill="rgb(214,194,35)" fg:x="218" fg:w="1"/><text x="91.0833%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="90.8333%" y="213" width="0.4167%" height="15" fill="rgb(249,28,3)" fg:x="218" fg:w="1"/><text x="91.0833%" y="223.50"></text></g><g><title>[libudev.so.1.7.8] (12 samples, 5.00%)</title><rect x="87.5000%" y="245" width="5.0000%" height="15" fill="rgb(222,56,52)" fg:x="210" fg:w="12"/><text x="87.7500%" y="255.50">[libud..</text></g><g><title>openat64 (3 samples, 1.25%)</title><rect x="91.2500%" y="229" width="1.2500%" height="15" fill="rgb(245,217,50)" fg:x="219" fg:w="3"/><text x="91.5000%" y="239.50"></text></g><g><title>[unknown] (3 samples, 1.25%)</title><rect x="91.2500%" y="213" width="1.2500%" height="15" fill="rgb(213,201,24)" fg:x="219" fg:w="3"/><text x="91.5000%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.83%)</title><rect x="91.6667%" y="197" width="0.8333%" height="15" fill="rgb(248,116,28)" fg:x="220" fg:w="2"/><text x="91.9167%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="92.0833%" y="181" width="0.4167%" height="15" fill="rgb(219,72,43)" fg:x="221" fg:w="1"/><text x="92.3333%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="92.0833%" y="165" width="0.4167%" height="15" fill="rgb(209,138,14)" fg:x="221" fg:w="1"/><text x="92.3333%" y="175.50"></text></g><g><title>__strdup (1 samples, 0.42%)</title><rect x="92.5000%" y="245" width="0.4167%" height="15" fill="rgb(222,18,33)" fg:x="222" fg:w="1"/><text x="92.7500%" y="255.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="92.5000%" y="229" width="0.4167%" height="15" fill="rgb(213,199,7)" fg:x="222" fg:w="1"/><text x="92.7500%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="92.5000%" y="213" width="0.4167%" height="15" fill="rgb(250,110,10)" fg:x="222" fg:w="1"/><text x="92.7500%" y="223.50"></text></g><g><title>[libudev.so.1.7.8] (17 samples, 7.08%)</title><rect x="87.0833%" y="261" width="7.0833%" height="15" fill="rgb(248,123,6)" fg:x="209" fg:w="17"/><text x="87.3333%" y="271.50">[libudev.s..</text></g><g><title>open64 (3 samples, 1.25%)</title><rect x="92.9167%" y="245" width="1.2500%" height="15" fill="rgb(206,91,31)" fg:x="223" fg:w="3"/><text x="93.1667%" y="255.50"></text></g><g><title>[unknown] (3 samples, 1.25%)</title><rect x="92.9167%" y="229" width="1.2500%" height="15" fill="rgb(211,154,13)" fg:x="223" fg:w="3"/><text x="93.1667%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="94.1667%" y="245" width="0.4167%" height="15" fill="rgb(225,148,7)" fg:x="226" fg:w="1"/><text x="94.4167%" y="255.50"></text></g><g><title>input::context::Libinput::udev_assign_seat (144 samples, 60.00%)</title><rect x="35.0000%" y="405" width="60.0000%" height="15" fill="rgb(220,160,43)" fg:x="84" fg:w="144"/><text x="35.2500%" y="415.50">input::context::Libinput::udev_assign_seat</text></g><g><title>libinput_udev_assign_seat (144 samples, 60.00%)</title><rect x="35.0000%" y="389" width="60.0000%" height="15" fill="rgb(213,52,39)" fg:x="84" fg:w="144"/><text x="35.2500%" y="399.50">libinput_udev_assign_seat</text></g><g><title>[libinput.so.10.13.0] (144 samples, 60.00%)</title><rect x="35.0000%" y="373" width="60.0000%" height="15" fill="rgb(243,137,7)" fg:x="84" fg:w="144"/><text x="35.2500%" y="383.50">[libinput.so.10.13.0]</text></g><g><title>udev_enumerate_scan_devices (23 samples, 9.58%)</title><rect x="85.4167%" y="357" width="9.5833%" height="15" fill="rgb(230,79,13)" fg:x="205" fg:w="23"/><text x="85.6667%" y="367.50">udev_enumerate..</text></g><g><title>[libudev.so.1.7.8] (23 samples, 9.58%)</title><rect x="85.4167%" y="341" width="9.5833%" height="15" fill="rgb(247,105,23)" fg:x="205" fg:w="23"/><text x="85.6667%" y="351.50">[libudev.so.1...</text></g><g><title>[libudev.so.1.7.8] (23 samples, 9.58%)</title><rect x="85.4167%" y="325" width="9.5833%" height="15" fill="rgb(223,179,41)" fg:x="205" fg:w="23"/><text x="85.6667%" y="335.50">[libudev.so.1...</text></g><g><title>[libudev.so.1.7.8] (23 samples, 9.58%)</title><rect x="85.4167%" y="309" width="9.5833%" height="15" fill="rgb(218,9,34)" fg:x="205" fg:w="23"/><text x="85.6667%" y="319.50">[libudev.so.1...</text></g><g><title>[libudev.so.1.7.8] (22 samples, 9.17%)</title><rect x="85.8333%" y="293" width="9.1667%" height="15" fill="rgb(222,106,8)" fg:x="206" fg:w="22"/><text x="86.0833%" y="303.50">[libudev.so.1..</text></g><g><title>[libudev.so.1.7.8] (22 samples, 9.17%)</title><rect x="85.8333%" y="277" width="9.1667%" height="15" fill="rgb(211,220,0)" fg:x="206" fg:w="22"/><text x="86.0833%" y="287.50">[libudev.so.1..</text></g><g><title>__strdup (2 samples, 0.83%)</title><rect x="94.1667%" y="261" width="0.8333%" height="15" fill="rgb(229,52,16)" fg:x="226" fg:w="2"/><text x="94.4167%" y="271.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="94.5833%" y="245" width="0.4167%" height="15" fill="rgb(212,155,18)" fg:x="227" fg:w="1"/><text x="94.8333%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="94.5833%" y="229" width="0.4167%" height="15" fill="rgb(242,21,14)" fg:x="227" fg:w="1"/><text x="94.8333%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.42%)</title><rect x="95.0000%" y="389" width="0.4167%" height="15" fill="rgb(222,19,48)" fg:x="228" fg:w="1"/><text x="95.2500%" y="399.50"></text></g><g><title>logger::calculate::_{{closure}} (1 samples, 0.42%)</title><rect x="95.0000%" y="373" width="0.4167%" height="15" fill="rgb(232,45,27)" fg:x="228" fg:w="1"/><text x="95.2500%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.42%)</title><rect x="95.0000%" y="357" width="0.4167%" height="15" fill="rgb(249,103,42)" fg:x="228" fg:w="1"/><text x="95.2500%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.42%)</title><rect x="95.0000%" y="341" width="0.4167%" height="15" fill="rgb(246,81,33)" fg:x="228" fg:w="1"/><text x="95.2500%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.42%)</title><rect x="95.0000%" y="325" width="0.4167%" height="15" fill="rgb(252,33,42)" fg:x="228" fg:w="1"/><text x="95.2500%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.42%)</title><rect x="95.0000%" y="309" width="0.4167%" height="15" fill="rgb(209,212,41)" fg:x="228" fg:w="1"/><text x="95.2500%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (1 samples, 0.42%)</title><rect x="95.0000%" y="293" width="0.4167%" height="15" fill="rgb(207,154,6)" fg:x="228" fg:w="1"/><text x="95.2500%" y="303.50"></text></g><g><title>hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::_{{closure}} (1 samples, 0.42%)</title><rect x="95.0000%" y="277" width="0.4167%" height="15" fill="rgb(223,64,47)" fg:x="228" fg:w="1"/><text x="95.2500%" y="287.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (W,V,U,T)&gt;::eq (1 samples, 0.42%)</title><rect x="95.0000%" y="261" width="0.4167%" height="15" fill="rgb(211,161,38)" fg:x="228" fg:w="1"/><text x="95.2500%" y="271.50"></text></g><g><title>logger::calculate (2 samples, 0.83%)</title><rect x="95.0000%" y="405" width="0.8333%" height="15" fill="rgb(219,138,40)" fg:x="228" fg:w="2"/><text x="95.2500%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.42%)</title><rect x="95.4167%" y="389" width="0.4167%" height="15" fill="rgb(241,228,46)" fg:x="229" fg:w="1"/><text x="95.6667%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.42%)</title><rect x="95.4167%" y="373" width="0.4167%" height="15" fill="rgb(223,209,38)" fg:x="229" fg:w="1"/><text x="95.6667%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.42%)</title><rect x="95.4167%" y="357" width="0.4167%" height="15" fill="rgb(236,164,45)" fg:x="229" fg:w="1"/><text x="95.6667%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.42%)</title><rect x="95.4167%" y="341" width="0.4167%" height="15" fill="rgb(231,15,5)" fg:x="229" fg:w="1"/><text x="95.6667%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.42%)</title><rect x="95.4167%" y="325" width="0.4167%" height="15" fill="rgb(252,35,15)" fg:x="229" fg:w="1"/><text x="95.6667%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.42%)</title><rect x="95.4167%" y="309" width="0.4167%" height="15" fill="rgb(248,181,18)" fg:x="229" fg:w="1"/><text x="95.6667%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.42%)</title><rect x="95.4167%" y="293" width="0.4167%" height="15" fill="rgb(233,39,42)" fg:x="229" fg:w="1"/><text x="95.6667%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.42%)</title><rect x="95.4167%" y="277" width="0.4167%" height="15" fill="rgb(238,110,33)" fg:x="229" fg:w="1"/><text x="95.6667%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.42%)</title><rect x="95.4167%" y="261" width="0.4167%" height="15" fill="rgb(233,195,10)" fg:x="229" fg:w="1"/><text x="95.6667%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.42%)</title><rect x="95.4167%" y="245" width="0.4167%" height="15" fill="rgb(254,105,3)" fg:x="229" fg:w="1"/><text x="95.6667%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.42%)</title><rect x="95.4167%" y="229" width="0.4167%" height="15" fill="rgb(221,225,9)" fg:x="229" fg:w="1"/><text x="95.6667%" y="239.50"></text></g><g><title>malloc (1 samples, 0.42%)</title><rect x="95.4167%" y="213" width="0.4167%" height="15" fill="rgb(224,227,45)" fg:x="229" fg:w="1"/><text x="95.6667%" y="223.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="95.4167%" y="197" width="0.4167%" height="15" fill="rgb(229,198,43)" fg:x="229" fg:w="1"/><text x="95.6667%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.42%)</title><rect x="95.4167%" y="181" width="0.4167%" height="15" fill="rgb(206,209,35)" fg:x="229" fg:w="1"/><text x="95.6667%" y="191.50"></text></g><g><title>__poll (8 samples, 3.33%)</title><rect x="95.8333%" y="389" width="3.3333%" height="15" fill="rgb(245,195,53)" fg:x="230" fg:w="8"/><text x="96.0833%" y="399.50">__p..</text></g><g><title>[unknown] (7 samples, 2.92%)</title><rect x="96.2500%" y="373" width="2.9167%" height="15" fill="rgb(240,92,26)" fg:x="231" fg:w="7"/><text x="96.5000%" y="383.50">[u..</text></g><g><title>[unknown] (7 samples, 2.92%)</title><rect x="96.2500%" y="357" width="2.9167%" height="15" fill="rgb(207,40,23)" fg:x="231" fg:w="7"/><text x="96.5000%" y="367.50">[u..</text></g><g><title>[unknown] (4 samples, 1.67%)</title><rect x="97.5000%" y="341" width="1.6667%" height="15" fill="rgb(223,111,35)" fg:x="234" fg:w="4"/><text x="97.7500%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="98.7500%" y="325" width="0.4167%" height="15" fill="rgb(229,147,28)" fg:x="237" fg:w="1"/><text x="99.0000%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.42%)</title><rect x="98.7500%" y="309" width="0.4167%" height="15" fill="rgb(211,29,28)" fg:x="237" fg:w="1"/><text x="99.0000%" y="319.50"></text></g><g><title>all (240 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(228,72,33)" fg:x="0" fg:w="240"/><text x="0.2500%" y="719.50"></text></g><g><title>logger (240 samples, 100.00%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(205,214,31)" fg:x="0" fg:w="240"/><text x="0.2500%" y="703.50">logger</text></g><g><title>_start (224 samples, 93.33%)</title><rect x="6.6667%" y="677" width="93.3333%" height="15" fill="rgb(224,111,15)" fg:x="16" fg:w="224"/><text x="6.9167%" y="687.50">_start</text></g><g><title>__libc_start_main (224 samples, 93.33%)</title><rect x="6.6667%" y="661" width="93.3333%" height="15" fill="rgb(253,21,26)" fg:x="16" fg:w="224"/><text x="6.9167%" y="671.50">__libc_start_main</text></g><g><title>[libc.so.6] (224 samples, 93.33%)</title><rect x="6.6667%" y="645" width="93.3333%" height="15" fill="rgb(245,139,43)" fg:x="16" fg:w="224"/><text x="6.9167%" y="655.50">[libc.so.6]</text></g><g><title>std::rt::lang_start (224 samples, 93.33%)</title><rect x="6.6667%" y="629" width="93.3333%" height="15" fill="rgb(252,170,7)" fg:x="16" fg:w="224"/><text x="6.9167%" y="639.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (224 samples, 93.33%)</title><rect x="6.6667%" y="613" width="93.3333%" height="15" fill="rgb(231,118,14)" fg:x="16" fg:w="224"/><text x="6.9167%" y="623.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (224 samples, 93.33%)</title><rect x="6.6667%" y="597" width="93.3333%" height="15" fill="rgb(238,83,0)" fg:x="16" fg:w="224"/><text x="6.9167%" y="607.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (224 samples, 93.33%)</title><rect x="6.6667%" y="581" width="93.3333%" height="15" fill="rgb(221,39,39)" fg:x="16" fg:w="224"/><text x="6.9167%" y="591.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (224 samples, 93.33%)</title><rect x="6.6667%" y="565" width="93.3333%" height="15" fill="rgb(222,119,46)" fg:x="16" fg:w="224"/><text x="6.9167%" y="575.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (224 samples, 93.33%)</title><rect x="6.6667%" y="549" width="93.3333%" height="15" fill="rgb(222,165,49)" fg:x="16" fg:w="224"/><text x="6.9167%" y="559.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (224 samples, 93.33%)</title><rect x="6.6667%" y="533" width="93.3333%" height="15" fill="rgb(219,113,52)" fg:x="16" fg:w="224"/><text x="6.9167%" y="543.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (224 samples, 93.33%)</title><rect x="6.6667%" y="517" width="93.3333%" height="15" fill="rgb(214,7,15)" fg:x="16" fg:w="224"/><text x="6.9167%" y="527.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (224 samples, 93.33%)</title><rect x="6.6667%" y="501" width="93.3333%" height="15" fill="rgb(235,32,4)" fg:x="16" fg:w="224"/><text x="6.9167%" y="511.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (224 samples, 93.33%)</title><rect x="6.6667%" y="485" width="93.3333%" height="15" fill="rgb(238,90,54)" fg:x="16" fg:w="224"/><text x="6.9167%" y="495.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (224 samples, 93.33%)</title><rect x="6.6667%" y="469" width="93.3333%" height="15" fill="rgb(213,208,19)" fg:x="16" fg:w="224"/><text x="6.9167%" y="479.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (224 samples, 93.33%)</title><rect x="6.6667%" y="453" width="93.3333%" height="15" fill="rgb(233,156,4)" fg:x="16" fg:w="224"/><text x="6.9167%" y="463.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (224 samples, 93.33%)</title><rect x="6.6667%" y="437" width="93.3333%" height="15" fill="rgb(207,194,5)" fg:x="16" fg:w="224"/><text x="6.9167%" y="447.50">core::ops::function::FnOnce::call_once</text></g><g><title>logger::main (224 samples, 93.33%)</title><rect x="6.6667%" y="421" width="93.3333%" height="15" fill="rgb(206,111,30)" fg:x="16" fg:w="224"/><text x="6.9167%" y="431.50">logger::main</text></g><g><title>nix::poll::poll (10 samples, 4.17%)</title><rect x="95.8333%" y="405" width="4.1667%" height="15" fill="rgb(243,70,54)" fg:x="230" fg:w="10"/><text x="96.0833%" y="415.50">nix::..</text></g><g><title>nix::errno::&lt;impl nix::errno::consts::Errno&gt;::result (2 samples, 0.83%)</title><rect x="99.1667%" y="389" width="0.8333%" height="15" fill="rgb(242,28,8)" fg:x="238" fg:w="2"/><text x="99.4167%" y="399.50"></text></g></svg></svg>